<?xml version="1.0"?>

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <type name="Magento\Payment\Model\MethodList">
        <plugin name="add_available_methods" type="MultiSafepay\ConnectCore\Plugin\MethodListPlugin" sortOrder="1" disabled="false"  />
    </type>

    <type name="Magento\Payment\Helper\Data">
        <plugin name="add_generic_methods_to_all_payment_methods" type="MultiSafepay\ConnectCore\Plugin\Payment\Helper\DataPlugin"
            sortOrder="1" disabled="false"  />
    </type>

    <type name="Magento\Sales\Model\Order\Payment">
        <plugin name="can_cancel_capture_manual_payments" type="MultiSafepay\ConnectCore\Plugin\Sales\Model\Order\PaymentPlugin"
            sortOrder="1" disabled="false"  />
    </type>

    <type name="Magento\Multishipping\Model\Payment\Method\Specification\Enabled">
        <plugin name="add_generic_methods_to_multishipping" type="MultiSafepay\ConnectCore\Plugin\Multishipping\Model\Payment\Method\Specification\EnabledPlugin"
            sortOrder="1" disabled="false"  />
    </type>

    <preference for="MultiSafepay\ConnectCore\Api\StockReducerInterface" type="MultiSafepay\ConnectCore\Model\StockReducer" />

    <!-- MultiSafepay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MultiSafepayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Configuration reader -->
    <virtualType name="MultiSafepayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MultiSafepayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Config Value Handler Pool -->
    <virtualType name="MultiSafepayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Config Value Handler -->
    <virtualType name="MultiSafepayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayConfig</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Logger, initialized with MultiSafepayConfig -->
    <virtualType name="MultiSafepayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayLogger</argument>
        </arguments>
    </type>

    <!-- MultiSafepay Commands infrastructure -->
    <virtualType name="MultiSafepayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Initialize command -->
    <virtualType name="MultiSafepayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Refund command -->
    <virtualType name="MultiSafepayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Initialization Request -->
    <virtualType name="MultiSafepayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Refund Request -->
    <virtualType name="MultiSafepayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Validator Pool -->
    <virtualType name="MultiSafepayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayConfig</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepay Value handlers infrastructure -->
    <virtualType name="MultiSafepayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayConfig</argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Payment Method Facade configuration -->
    <virtualType name="IdealFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">IdealValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">IdealValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">IdealCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Configuration reader -->
    <virtualType name="IdealConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Config Value Handler Pool -->
    <virtualType name="IdealConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IdealConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Config Value Handler -->
    <virtualType name="IdealConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">IdealConfig</argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Logger, initialized with IdealConfig -->
    <virtualType name="IdealLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">IdealConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">IdealLogger</argument>
        </arguments>
    </type>

    <!-- iDEAL Commands infrastructure -->
    <virtualType name="IdealCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">IdealInitializeCommand</item>
                <item name="refund" xsi:type="string">IdealRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Initialize command -->
    <virtualType name="IdealInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IdealInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Refund command -->
    <virtualType name="IdealRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IdealRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Initialization Request -->
    <virtualType name="IdealInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Refund Request -->
    <virtualType name="IdealRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Validator Pool -->
    <virtualType name="IdealValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">IdealCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IdealCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">IdealConfig</argument>
        </arguments>
    </virtualType>
    <!-- iDEAL Value handlers infrastructure -->
    <virtualType name="IdealValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IdealConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IdealConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">IdealConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayIdealVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIdealVaultConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayIdealVaultValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">MultiSafepayIdealRecurringFacade</argument>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <!-- Ideal Vault Configuration reader -->
    <virtualType name="MultiSafepayIdealVaultConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayIdealVaultValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIdealVaultConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayIdealVaultValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIdealVaultValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayIdealVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIdealVaultAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RecurringClient</argument>
        </arguments>
    </virtualType>

    <!-- Ideal Vault Authorize Request -->
    <virtualType name="MultiSafepayIdealVaultAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RecurringTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Command managers section for Vault -->
    <virtualType name="MultiSafepayIdealVaultCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">MultiSafepayIdealRecurringCommandPool</argument>
        </arguments>
    </virtualType>
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="multisafepay_ideal_recurring" xsi:type="string">MultiSafepayIdealVaultCommandManager</item>
            </argument>
        </arguments>
    </type>

    <!-- IdealRecurring Payment Method Facade configuration -->
    <virtualType name="MultiSafepayIdealRecurringFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealRecurringConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayIdealRecurringValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayIdealRecurringValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayIdealRecurringCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Configuration reader -->
    <virtualType name="MultiSafepayIdealRecurringConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealRecurringConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Config Value Handler Pool -->
    <virtualType name="MultiSafepayIdealRecurringConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIdealRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Config Value Handler -->
    <virtualType name="MultiSafepayIdealRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIdealRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Logger, initialized with IdealRecurringConfig -->
    <virtualType name="MultiSafepayIdealRecurringLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIdealRecurringConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayIdealRecurringLogger</argument>
        </arguments>
    </type>

    <!-- IdealRecurring Commands infrastructure -->
    <virtualType name="MultiSafepayIdealRecurringCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">MultiSafepayIdealRecurringAuthorizeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayIdealRecurringRefundCommand</item>
                <item name="vault_authorize" xsi:type="string">MultiSafepayIdealVaultAuthorizeCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Initialize command -->
    <virtualType name="MultiSafepayIdealRecurringAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIdealRecurringAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Refund command -->
    <virtualType name="MultiSafepayIdealRecurringRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIdealRecurringRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Authorize Request -->
    <virtualType name="MultiSafepayIdealRecurringAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Refund Request -->
    <virtualType name="MultiSafepayIdealRecurringRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Validator Pool -->
    <virtualType name="MultiSafepayIdealRecurringValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayIdealRecurringCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayIdealRecurringCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIdealRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- IdealRecurring Value handlers infrastructure -->
    <virtualType name="MultiSafepayIdealRecurringValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIdealRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayIdealRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIdealRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- Payafter Payment Method Facade configuration -->
    <virtualType name="PayafterFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\PayafterConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">PayafterValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">PayafterValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PayafterCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Payafter Configuration reader -->
    <virtualType name="PayafterConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\PayafterConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Payafter Config Value Handler Pool -->
    <virtualType name="PayafterConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PayafterConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payafter Config Value Handler -->
    <virtualType name="PayafterConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PayafterConfig</argument>
        </arguments>
    </virtualType>

    <!-- Payafter Logger, initialized with PayafterConfig -->
    <virtualType name="PayafterLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">PayafterConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">PayafterLogger</argument>
        </arguments>
    </type>

    <!-- Payafter Commands infrastructure -->
    <virtualType name="PayafterCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">PayafterInitializeCommand</item>
                <item name="refund" xsi:type="string">PayafterRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payafter Initialize command -->
    <virtualType name="PayafterInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayAfterInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Payafter Refund command -->
    <virtualType name="PayafterRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayafterRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\ShoppingCartRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Payafter Initialize Request -->
    <virtualType name="PayAfterInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payafter Refund Request -->
    <virtualType name="PayafterRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Payafter Validator Pool -->
    <virtualType name="PayafterValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">PayafterCountryValidator</item>
                <item name="global" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\PayafterValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="PayafterCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">PayafterConfig</argument>
        </arguments>
    </virtualType>

    <!-- Payafter Value handlers infrastructure -->
    <virtualType name="PayafterValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PayafterConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="PayafterConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">PayafterConfig</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Payment Method Facade configuration -->
    <virtualType name="MultiSafepayBnplinstmFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BnplinstmConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayBnplinstmValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayBnplinstmValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayBnplinstmCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Configuration reader -->
    <virtualType name="MultiSafepayBnplinstmConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BnplinstmConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Config Value Handler Pool -->
    <virtualType name="MultiSafepayBnplinstmConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBnplinstmConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Config Value Handler -->
    <virtualType name="MultiSafepayBnplinstmConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBnplinstmConfig</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Logger, initialized with MultiSafepayBnplinstmConfig -->
    <virtualType name="MultiSafepayBnplinstmLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBnplinstmConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayBnplinstmLogger</argument>
        </arguments>
    </type>

    <!-- Pay After Delivery Instalments Commands infrastructure -->
    <virtualType name="MultiSafepayBnplinstmCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayBnplinstmInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayBnplinstmRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Initialize command -->
    <virtualType name="MultiSafepayBnplinstmInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBnplinstmInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Refund command -->
    <virtualType name="MultiSafepayBnplinstmRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBnplinstmRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\ShoppingCartRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Initialization Request -->
    <virtualType name="MultiSafepayBnplinstmInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Refund Request -->
    <virtualType name="MultiSafepayBnplinstmRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Validator Pool -->
    <virtualType name="MultiSafepayBnplinstmValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayBnplinstmCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBnplinstmCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBnplinstmConfig</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Instalments Value handlers infrastructure -->
    <virtualType name="MultiSafepayBnplinstmValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBnplinstmConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBnplinstmConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBnplinstmConfig</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Payment Method Facade configuration -->
    <virtualType name="MultiSafepayBnplmfFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BnplmfConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayBnplmfValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayBnplmfValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayBnplmfCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Configuration reader -->
    <virtualType name="MultiSafepayBnplmfConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BnplmfConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Config Value Handler Pool -->
    <virtualType name="MultiSafepayBnplmfConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBnplmfConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Config Value Handler -->
    <virtualType name="MultiSafepayBnplmfConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBnplmfConfig</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Logger, initialized with MultiSafepayBnplmfConfig -->
    <virtualType name="MultiSafepayBnplmfLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBnplmfConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayBnplmfLogger</argument>
        </arguments>
    </type>

    <!-- Pay After Delivery Commands infrastructure -->
    <virtualType name="MultiSafepayBnplmfCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayBnplmfInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayBnplmfRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Initialize command -->
    <virtualType name="MultiSafepayBnplmfInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBnplmfInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Refund command -->
    <virtualType name="MultiSafepayBnplmfRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBnplmfRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\ShoppingCartRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Initialization Request -->
    <virtualType name="MultiSafepayBnplmfInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Refund Request -->
    <virtualType name="MultiSafepayBnplmfRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Validator Pool -->
    <virtualType name="MultiSafepayBnplmfValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayBnplmfCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBnplmfCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBnplmfConfig</argument>
        </arguments>
    </virtualType>

    <!-- Pay After Delivery Value handlers infrastructure -->
    <virtualType name="MultiSafepayBnplmfValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBnplmfConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBnplmfConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBnplmfConfig</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Payment Method Facade configuration -->
    <virtualType name="KlarnaFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\KlarnaConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">KlarnaValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">KlarnaValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">KlarnaCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Configuration reader -->
    <virtualType name="KlarnaConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\KlarnaConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Config Value Handler Pool -->
    <virtualType name="KlarnaConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">KlarnaConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Klarna Config Value Handler -->
    <virtualType name="KlarnaConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">KlarnaConfig</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Logger, initialized with KlarnaConfig -->
    <virtualType name="KlarnaLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">KlarnaConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">KlarnaLogger</argument>
        </arguments>
    </type>

    <!-- Klarna Commands infrastructure -->
    <virtualType name="KlarnaCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">KlarnaInitializeCommand</item>
                <item name="refund" xsi:type="string">KlarnaRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Klarna Initialize command -->
    <virtualType name="KlarnaInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">KlarnaInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Refund command -->
    <virtualType name="KlarnaRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">KlarnaRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\ShoppingCartRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Initialization Request -->
    <virtualType name="KlarnaInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Klarna Refund Request -->
    <virtualType name="KlarnaRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Klarna Validator Pool -->
    <virtualType name="KlarnaValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">KlarnaCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="KlarnaCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">KlarnaConfig</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Value handlers infrastructure -->
    <virtualType name="KlarnaValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">KlarnaConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="KlarnaConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">KlarnaConfig</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Payment Method Facade configuration -->
    <virtualType name="AfterpayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AfterpayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">AfterpayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">AfterpayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">AfterpayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Configuration reader -->
    <virtualType name="AfterpayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AfterpayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Config Value Handler Pool -->
    <virtualType name="AfterpayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AfterpayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Config Value Handler -->
    <virtualType name="AfterpayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">AfterpayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Logger, initialized with AfterpayConfig -->
    <virtualType name="AfterpayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">AfterpayConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">AfterpayLogger</argument>
        </arguments>
    </type>

    <!-- Afterpay Commands infrastructure -->
    <virtualType name="AfterpayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">AfterpayInitializeCommand</item>
                <item name="refund" xsi:type="string">AfterpayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Initialize command -->
    <virtualType name="AfterpayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Refund command -->
    <virtualType name="AfterpayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\ShoppingCartRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Initialize Request -->
    <virtualType name="AfterpayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Refund Request -->
    <virtualType name="AfterpayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Validator Pool -->
    <virtualType name="AfterpayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">AfterpayCountryValidator</item>
                <item name="global" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\AfterpayValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AfterpayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">AfterpayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Value handlers infrastructure -->
    <virtualType name="AfterpayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AfterpayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AfterpayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">AfterpayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Payment Method Facade configuration -->
    <virtualType name="BancontactFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BancontactConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">BancontactValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">BancontactValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">BancontactCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Configuration reader -->
    <virtualType name="BancontactConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BancontactConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Config Value Handler Pool -->
    <virtualType name="BancontactConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">BancontactConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Config Value Handler -->
    <virtualType name="BancontactConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">BancontactConfig</argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Logger, initialized with BancontactConfig -->
    <virtualType name="BancontactLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">BancontactConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">BancontactLogger</argument>
        </arguments>
    </type>

    <!-- Bancontact Commands infrastructure -->
    <virtualType name="BancontactCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">BancontactInitializeCommand</item>
                <item name="refund" xsi:type="string">BancontactRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Initialize command -->
    <virtualType name="BancontactInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BancontactInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Refund command -->
    <virtualType name="BancontactRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BancontactRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Initialization Request -->
    <virtualType name="BancontactInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Refund Request -->
    <virtualType name="BancontactRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Validator Pool -->
    <virtualType name="BancontactValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">BancontactCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="BancontactCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">BancontactConfig</argument>
        </arguments>
    </virtualType>

    <!-- Bancontact Value handlers infrastructure -->
    <virtualType name="BancontactValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">BancontactConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="BancontactConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">BancontactConfig</argument>
        </arguments>
    </virtualType>

    <!-- Amex Payment Method Facade configuration -->
    <virtualType name="MultiSafepayAmexFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmexConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayAmexValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayAmexValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayAmexCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Amex Configuration reader -->
    <virtualType name="MultiSafepayAmexConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmexConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Amex Config Value Handler Pool -->
    <virtualType name="MultiSafepayAmexConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAmexConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Amex Config Value Handler -->
    <virtualType name="MultiSafepayAmexConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAmexConfig</argument>
        </arguments>
    </virtualType>

    <!-- Amex Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayAmexLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAmexConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayAmexLogger</argument>
        </arguments>
    </type>

    <!-- Amex Commands infrastructure -->
    <virtualType name="MultiSafepayAmexCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayAmexInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayAmexRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Amex Initialize command -->
    <virtualType name="MultiSafepayAmexInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAmexInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Amex Refund command -->
    <virtualType name="MultiSafepayAmexRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAmexRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Amex Initialization Request -->
    <virtualType name="MultiSafepayAmexInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Amex Refund Request -->
    <virtualType name="MultiSafepayAmexRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Amex Validator Pool -->
    <virtualType name="MultiSafepayAmexValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayAmexCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAmexCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAmexConfig</argument>
        </arguments>
    </virtualType>

    <!-- Amex Value handlers infrastructure -->
    <virtualType name="MultiSafepayAmexValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAmexConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAmexConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAmexConfig</argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayApplePayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\ApplePayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayApplePayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayApplePayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayApplePayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Configuration reader -->
    <virtualType name="MultiSafepayApplePayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\ApplePayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Config Value Handler Pool -->
    <virtualType name="MultiSafepayApplePayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayApplePayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Config Value Handler -->
    <virtualType name="MultiSafepayApplePayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayApplePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Logger, initialized with ApplePayConfig -->
    <virtualType name="MultiSafepayApplePayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayApplePayConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayApplePayLogger</argument>
        </arguments>
    </type>

    <!-- ApplePay Commands infrastructure -->
    <virtualType name="MultiSafepayApplePayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayApplePayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayApplePayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Initialize command -->
    <virtualType name="MultiSafepayApplePayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayApplePayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Refund command -->
    <virtualType name="MultiSafepayApplePayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayApplePayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Initialization Request -->
    <virtualType name="MultiSafepayApplePayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Refund Request -->
    <virtualType name="MultiSafepayApplePayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Validator Pool -->
    <virtualType name="MultiSafepayApplePayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayApplePayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayApplePayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayApplePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- ApplePay Value handlers infrastructure -->
    <virtualType name="MultiSafepayApplePayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayApplePayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayApplePayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayApplePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Belfius Payment Method Facade configuration -->
    <virtualType name="MultiSafepayBelfiusFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BelfiusConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayBelfiusValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayBelfiusValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayBelfiusCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Belfius Configuration reader -->
    <virtualType name="MultiSafepayBelfiusConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BelfiusConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Belfius Config Value Handler Pool -->
    <virtualType name="MultiSafepayBelfiusConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBelfiusConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Belfius Config Value Handler -->
    <virtualType name="MultiSafepayBelfiusConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBelfiusConfig</argument>
        </arguments>
    </virtualType>

    <!-- Belfius Logger, initialized with BelfiusConfig -->
    <virtualType name="MultiSafepayBelfiusLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBelfiusConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayBelfiusLogger</argument>
        </arguments>
    </type>

    <!-- Belfius Commands infrastructure -->
    <virtualType name="MultiSafepayBelfiusCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayBelfiusInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayBelfiusRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Belfius Initialize command -->
    <virtualType name="MultiSafepayBelfiusInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBelfiusInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Belfius Refund command -->
    <virtualType name="MultiSafepayBelfiusRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBelfiusRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Belfius Initialization Request -->
    <virtualType name="MultiSafepayBelfiusInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Belfius Refund Request -->
    <virtualType name="MultiSafepayBelfiusRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Belfius Validator Pool -->
    <virtualType name="MultiSafepayBelfiusValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayBelfiusCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBelfiusCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBelfiusConfig</argument>
        </arguments>
    </virtualType>

    <!-- Belfius Value handlers infrastructure -->
    <virtualType name="MultiSafepayBelfiusValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBelfiusConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBelfiusConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBelfiusConfig</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Payment Method Facade configuration -->
    <virtualType name="MultiSafepayCreditCardRecurringFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\CreditCardRecurringConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayCreditCardRecurringValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayCreditCardRecurringValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayCreditCardRecurringCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Configuration reader -->
    <virtualType name="MultiSafepayCreditCardRecurringConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\CreditCardRecurringConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Config Value Handler Pool -->
    <virtualType name="MultiSafepayCreditCardRecurringConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayCreditCardRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Config Value Handler -->
    <virtualType name="MultiSafepayCreditCardRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayCreditCardRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Logger, initialized with CreditCardRecurringConfig -->
    <virtualType name="MultiSafepayCreditCardRecurringLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayCreditCardRecurringConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayCreditCardRecurringLogger</argument>
        </arguments>
    </type>

    <!-- CreditCardRecurring Commands infrastructure -->
    <virtualType name="MultiSafepayCreditCardRecurringCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">MultiSafepayCreditCardRecurringAuthorizeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayCreditCardRecurringRefundCommand</item>
                <item name="vault_authorize" xsi:type="string">MultiSafepayCreditCardVaultAuthorizeCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayCreditCardRecurringCaptureCommand</item>
                <item name="cancel" xsi:type="string">MultiSafepayCreditCardRecurringCancelCommand</item>
                <item name="void" xsi:type="string">MultiSafepayCreditCardRecurringCancelCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Capture command -->
    <virtualType name="MultiSafepayCreditCardRecurringCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardRecurringCaptureRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CaptureClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Cancel command -->
    <virtualType name="MultiSafepayCreditCardRecurringCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardRecurringCancelRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CancelClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Initialize command -->
    <virtualType name="MultiSafepayCreditCardRecurringAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardRecurringAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Refund command -->
    <virtualType name="MultiSafepayCreditCardRecurringRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardRecurringRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Cancel Request -->
    <virtualType name="MultiSafepayCreditCardRecurringCancelRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CancelTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Capture Request -->
    <virtualType name="MultiSafepayCreditCardRecurringCaptureRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CaptureTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Authorize Request -->
    <virtualType name="MultiSafepayCreditCardRecurringAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Refund Request -->
    <virtualType name="MultiSafepayCreditCardRecurringRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Validator Pool -->
    <virtualType name="MultiSafepayCreditCardRecurringValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayCreditCardRecurringCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayCreditCardRecurringCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayCreditCardRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- CreditCardRecurring Value handlers infrastructure -->
    <virtualType name="MultiSafepayCreditCardRecurringValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayCreditCardRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayCreditCardRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayCreditCardRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Payment Method Facade configuration -->
    <virtualType name="MultiSafepayVisaRecurringFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\VisaRecurringConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayVisaRecurringValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayVisaRecurringValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayVisaRecurringCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Configuration reader -->
    <virtualType name="MultiSafepayVisaRecurringConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\VisaRecurringConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Config Value Handler Pool -->
    <virtualType name="MultiSafepayVisaRecurringConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVisaRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Config Value Handler -->
    <virtualType name="MultiSafepayVisaRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVisaRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Logger, initialized with VisaRecurringConfig -->
    <virtualType name="MultiSafepayVisaRecurringLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVisaRecurringConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayVisaRecurringLogger</argument>
        </arguments>
    </type>

    <!-- VisaRecurring Commands infrastructure -->
    <virtualType name="MultiSafepayVisaRecurringCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">MultiSafepayVisaRecurringAuthorizeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayVisaRecurringRefundCommand</item>
                <item name="vault_authorize" xsi:type="string">MultiSafepayVisaVaultAuthorizeCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayVisaRecurringCaptureCommand</item>
                <item name="cancel" xsi:type="string">MultiSafepayVisaRecurringCancelCommand</item>
                <item name="void" xsi:type="string">MultiSafepayVisaRecurringCancelCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Capture command -->
    <virtualType name="MultiSafepayVisaRecurringCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardRecurringCaptureRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CaptureClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Cancel command -->
    <virtualType name="MultiSafepayVisaRecurringCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardRecurringCancelRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CancelClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Initialize command -->
    <virtualType name="MultiSafepayVisaRecurringAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVisaRecurringAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Refund command -->
    <virtualType name="MultiSafepayVisaRecurringRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVisaRecurringRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Cancel Request -->
    <virtualType name="MultiSafepayVisaRecurringCancelRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CancelTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Capture Request -->
    <virtualType name="MultiSafepayVisaRecurringCaptureRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CaptureTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Authorize Request -->
    <virtualType name="MultiSafepayVisaRecurringAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Refund Request -->
    <virtualType name="MultiSafepayVisaRecurringRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Validator Pool -->
    <virtualType name="MultiSafepayVisaRecurringValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayVisaRecurringCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayVisaRecurringCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVisaRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- VisaRecurring Value handlers infrastructure -->
    <virtualType name="MultiSafepayVisaRecurringValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVisaRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayVisaRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVisaRecurringConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayVisaVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVisaVaultConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayVisaVaultValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">MultiSafepayVisaRecurringFacade</argument>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\VisaConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <!-- Visa Vault Configuration reader -->
    <virtualType name="MultiSafepayVisaVaultConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\VisaConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayVisaVaultValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVisaVaultConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayVisaVaultValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVisaVaultValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayVisaVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVisaVaultAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RecurringClient</argument>
        </arguments>
    </virtualType>

    <!-- Visa Vault Authorize Request -->
    <virtualType name="MultiSafepayVisaVaultAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RecurringTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Command managers section for Vault -->
    <virtualType name="MultiSafepayVisaVaultCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">MultiSafepayVisaRecurringCommandPool</argument>
        </arguments>
    </virtualType>
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="multisafepay_visa_recurring" xsi:type="string">MultiSafepayVisaVaultCommandManager</item>
            </argument>
        </arguments>
    </type>

    <!-- MastercardRecurring Payment Method Facade configuration -->
    <virtualType name="MultiSafepayMastercardRecurringFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MastercardRecurringConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayMastercardRecurringValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayMastercardRecurringValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayMastercardRecurringCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Configuration reader -->
    <virtualType name="MultiSafepayMastercardRecurringConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MastercardRecurringConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Config Value Handler Pool -->
    <virtualType name="MultiSafepayMastercardRecurringConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMastercardRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Config Value Handler -->
    <virtualType name="MultiSafepayMastercardRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMastercardRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Logger, initialized with MastercardRecurringConfig -->
    <virtualType name="MultiSafepayMastercardRecurringLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMastercardRecurringConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayMastercardRecurringLogger</argument>
        </arguments>
    </type>

    <!-- MastercardRecurring Commands infrastructure -->
    <virtualType name="MultiSafepayMastercardRecurringCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">MultiSafepayMastercardRecurringAuthorizeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayMastercardRecurringRefundCommand</item>
                <item name="vault_authorize" xsi:type="string">MultiSafepayMastercardVaultAuthorizeCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayMastercardRecurringCaptureCommand</item>
                <item name="cancel" xsi:type="string">MultiSafepayMastercardRecurringCancelCommand</item>
                <item name="void" xsi:type="string">MultiSafepayMastercardRecurringCancelCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Capture command -->
    <virtualType name="MultiSafepayMastercardRecurringCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardRecurringCaptureRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CaptureClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Cancel command -->
    <virtualType name="MultiSafepayMastercardRecurringCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardRecurringCancelRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CancelClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Initialize command -->
    <virtualType name="MultiSafepayMastercardRecurringAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardRecurringAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Refund command -->
    <virtualType name="MultiSafepayMastercardRecurringRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardRecurringRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Cancel Request -->
    <virtualType name="MultiSafepayMastercardRecurringCancelRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CancelTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Capture Request -->
    <virtualType name="MultiSafepayMastercardRecurringCaptureRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CaptureTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Authorize Request -->
    <virtualType name="MultiSafepayMastercardRecurringAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Refund Request -->
    <virtualType name="MultiSafepayMastercardRecurringRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Validator Pool -->
    <virtualType name="MultiSafepayMastercardRecurringValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayMastercardRecurringCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMastercardRecurringCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMastercardRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- MastercardRecurring Value handlers infrastructure -->
    <virtualType name="MultiSafepayMastercardRecurringValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMastercardRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMastercardRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMastercardRecurringConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayMastercardVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMastercardVaultConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayMastercardVaultValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">MultiSafepayMastercardRecurringFacade</argument>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MastercardConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Vault Configuration reader -->
    <virtualType name="MultiSafepayMastercardVaultConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MastercardConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayMastercardVaultValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMastercardVaultConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayMastercardVaultValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMastercardVaultValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayMastercardVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardVaultAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RecurringClient</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Vault Authorize Request -->
    <virtualType name="MultiSafepayMastercardVaultAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RecurringTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Command managers section for Vault -->
    <virtualType name="MultiSafepayMastercardVaultCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">MultiSafepayMastercardRecurringCommandPool</argument>
        </arguments>
    </virtualType>
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="multisafepay_mastercard_recurring" xsi:type="string">MultiSafepayMastercardVaultCommandManager</item>
            </argument>
        </arguments>
    </type>

    <!-- AmexRecurring Payment Method Facade configuration -->
    <virtualType name="MultiSafepayAmexRecurringFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmexRecurringConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayAmexRecurringValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayAmexRecurringValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayAmexRecurringCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Configuration reader -->
    <virtualType name="MultiSafepayAmexRecurringConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmexRecurringConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Config Value Handler Pool -->
    <virtualType name="MultiSafepayAmexRecurringConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAmexRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Config Value Handler -->
    <virtualType name="MultiSafepayAmexRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAmexRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Logger, initialized with AmexRecurringConfig -->
    <virtualType name="MultiSafepayAmexRecurringLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAmexRecurringConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayAmexRecurringLogger</argument>
        </arguments>
    </type>

    <!-- AmexRecurring Commands infrastructure -->
    <virtualType name="MultiSafepayAmexRecurringCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">MultiSafepayAmexRecurringAuthorizeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayAmexRecurringRefundCommand</item>
                <item name="vault_authorize" xsi:type="string">MultiSafepayAmexVaultAuthorizeCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Initialize command -->
    <virtualType name="MultiSafepayAmexRecurringAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAmexRecurringAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Refund command -->
    <virtualType name="MultiSafepayAmexRecurringRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAmexRecurringRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Authorize Request -->
    <virtualType name="MultiSafepayAmexRecurringAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Refund Request -->
    <virtualType name="MultiSafepayAmexRecurringRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Validator Pool -->
    <virtualType name="MultiSafepayAmexRecurringValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayAmexRecurringCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAmexRecurringCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAmexRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- AmexRecurring Value handlers infrastructure -->
    <virtualType name="MultiSafepayAmexRecurringValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAmexRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAmexRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAmexRecurringConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayAmexVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAmexVaultConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayAmexVaultValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">MultiSafepayAmexRecurringFacade</argument>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmexConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <!-- Amex Vault Configuration reader -->
    <virtualType name="MultiSafepayAmexVaultConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmexConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayAmexVaultValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAmexVaultConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayAmexVaultValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAmexVaultValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayAmexVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAmexVaultAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RecurringClient</argument>
        </arguments>
    </virtualType>

    <!-- Amex Vault Authorize Request -->
    <virtualType name="MultiSafepayAmexVaultAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RecurringTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Command managers section for Vault -->
    <virtualType name="MultiSafepayAmexVaultCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">MultiSafepayAmexRecurringCommandPool</argument>
        </arguments>
    </virtualType>
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="multisafepay_amex_recurring" xsi:type="string">MultiSafepayAmexVaultCommandManager</item>
            </argument>
        </arguments>
    </type>

    <!-- CreditCard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayCreditCardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\CreditCardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayCreditCardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayCreditCardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayCreditCardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Configuration reader -->
    <virtualType name="MultiSafepayCreditCardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\CreditCardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Config Value Handler Pool -->
    <virtualType name="MultiSafepayCreditCardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayCreditCardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Config Value Handler -->
    <virtualType name="MultiSafepayCreditCardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayCreditCardConfig</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Logger, initialized with CreditCardConfig -->
    <virtualType name="MultiSafepayCreditCardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayCreditCardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayCreditCardLogger</argument>
        </arguments>
    </type>

    <!-- CreditCard Commands infrastructure -->
    <virtualType name="MultiSafepayCreditCardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayCreditCardInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayCreditCardRefundCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayCreditCardCaptureCommand</item>
                <item name="cancel" xsi:type="string">MultiSafepayCreditCardCancelCommand</item>
                <item name="void" xsi:type="string">MultiSafepayCreditCardCancelCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Capture command -->
    <virtualType name="MultiSafepayCreditCardCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardCaptureRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CaptureClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Cancel command -->
    <virtualType name="MultiSafepayCreditCardCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardCancelRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CancelClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Cancel Request -->
    <virtualType name="MultiSafepayCreditCardCancelRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CancelTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Capture Request -->
    <virtualType name="MultiSafepayCreditCardCaptureRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CaptureTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Initialize command -->
    <virtualType name="MultiSafepayCreditCardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Refund command -->
    <virtualType name="MultiSafepayCreditCardRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Authorize Request -->
    <virtualType name="MultiSafepayCreditCardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Refund Request -->
    <virtualType name="MultiSafepayCreditCardRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Validator Pool -->
    <virtualType name="MultiSafepayCreditCardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayCreditCardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayCreditCardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayCreditCardConfig</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Value handlers infrastructure -->
    <virtualType name="MultiSafepayCreditCardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayCreditCardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayCreditCardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayCreditCardConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayCreditCardVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayCreditCardVaultConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayCreditCardVaultValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">MultiSafepayCreditCardRecurringFacade</argument>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\CreditCardConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <!-- CreditCard Vault Configuration reader -->
    <virtualType name="MultiSafepayCreditCardVaultConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\CreditCardConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayCreditCardVaultValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayCreditCardVaultConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayCreditCardVaultValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayCreditCardVaultValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayCreditCardVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCreditCardVaultAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RecurringClient</argument>
        </arguments>
    </virtualType>

    <!-- Creditcard Vault Authorize Request -->
    <virtualType name="MultiSafepayCreditCardVaultAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RecurringTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Command managers section for Vault -->
    <virtualType name="MultiSafepayCreditCardVaultCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">MultiSafepayCreditCardRecurringCommandPool</argument>
        </arguments>
    </virtualType>
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="multisafepay_creditcard_recurring" xsi:type="string">MultiSafepayCreditCardVaultCommandManager</item>
            </argument>
        </arguments>
    </type>

    <!-- Dotpay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayDotpayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DotpayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayDotpayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayDotpayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayDotpayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Configuration reader -->
    <virtualType name="MultiSafepayDotpayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DotpayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Config Value Handler Pool -->
    <virtualType name="MultiSafepayDotpayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDotpayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Config Value Handler -->
    <virtualType name="MultiSafepayDotpayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDotpayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Logger, initialized with DotpayConfig -->
    <virtualType name="MultiSafepayDotpayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDotpayConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayDotpayLogger</argument>
        </arguments>
    </type>

    <!-- Dotpay Commands infrastructure -->
    <virtualType name="MultiSafepayDotpayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayDotpayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayDotpayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Initialize command -->
    <virtualType name="MultiSafepayDotpayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDotpayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Refund command -->
    <virtualType name="MultiSafepayDotpayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDotpayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Initialization Request -->
    <virtualType name="MultiSafepayDotpayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Refund Request -->
    <virtualType name="MultiSafepayDotpayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Validator Pool -->
    <virtualType name="MultiSafepayDotpayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayDotpayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayDotpayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDotpayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Dotpay Value handlers infrastructure -->
    <virtualType name="MultiSafepayDotpayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDotpayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayDotpayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDotpayConfig</argument>
        </arguments>
    </virtualType>

    <!-- EPS Payment Method Facade configuration -->
    <virtualType name="MultiSafepayEPSFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\EPSConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayEPSValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayEPSValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayEPSCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- EPS Configuration reader -->
    <virtualType name="MultiSafepayEPSConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\EPSConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- EPS Config Value Handler Pool -->
    <virtualType name="MultiSafepayEPSConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayEPSConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- EPS Config Value Handler -->
    <virtualType name="MultiSafepayEPSConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayEPSConfig</argument>
        </arguments>
    </virtualType>

    <!-- EPS Logger, initialized with EPSConfig -->
    <virtualType name="MultiSafepayEPSLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayEPSConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayEPSLogger</argument>
        </arguments>
    </type>

    <!-- EPS Commands infrastructure -->
    <virtualType name="MultiSafepayEPSCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayEPSInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayEPSRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- EPS Initialize command -->
    <virtualType name="MultiSafepayEPSInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayEPSInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- EPS Refund command -->
    <virtualType name="MultiSafepayEPSRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayEPSRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- EPS Initialization Request -->
    <virtualType name="MultiSafepayEPSInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- EPS Refund Request -->
    <virtualType name="MultiSafepayEPSRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- EPS Validator Pool -->
    <virtualType name="MultiSafepayEPSValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayEPSCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayEPSCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayEPSConfig</argument>
        </arguments>
    </virtualType>

    <!-- EPS Value handlers infrastructure -->
    <virtualType name="MultiSafepayEPSValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayEPSConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayEPSConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayEPSConfig</argument>
        </arguments>
    </virtualType>

    <!-- Giropay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayGiropayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\GiropayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayGiropayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayGiropayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayGiropayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Giropay Configuration reader -->
    <virtualType name="MultiSafepayGiropayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\GiropayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Giropay Config Value Handler Pool -->
    <virtualType name="MultiSafepayGiropayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGiropayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Giropay Config Value Handler -->
    <virtualType name="MultiSafepayGiropayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGiropayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Giropay Logger, initialized with GiropayConfig -->
    <virtualType name="MultiSafepayGiropayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGiropayConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayGiropayLogger</argument>
        </arguments>
    </type>

    <!-- Giropay Commands infrastructure -->
    <virtualType name="MultiSafepayGiropayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayGiropayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayGiropayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Giropay Initialize command -->
    <virtualType name="MultiSafepayGiropayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGiropayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Giropay Refund command -->
    <virtualType name="MultiSafepayGiropayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGiropayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Giropay Initialization Request -->
    <virtualType name="MultiSafepayGiropayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Giropay Refund Request -->
    <virtualType name="MultiSafepayGiropayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Giropay Validator Pool -->
    <virtualType name="MultiSafepayGiropayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayGiropayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGiropayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGiropayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Giropay Value handlers infrastructure -->
    <virtualType name="MultiSafepayGiropayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGiropayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGiropayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGiropayConfig</argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayGooglePayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\GooglePayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayGooglePayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayGooglePayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayGooglePayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Configuration reader -->
    <virtualType name="MultiSafepayGooglePayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\GooglePayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Config Value Handler Pool -->
    <virtualType name="MultiSafepayGooglePayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGooglePayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Config Value Handler -->
    <virtualType name="MultiSafepayGooglePayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGooglePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Logger, initialized with GooglePayConfig -->
    <virtualType name="MultiSafepayGooglePayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGooglePayConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayGooglePayLogger</argument>
        </arguments>
    </type>

    <!-- GooglePay Commands infrastructure -->
    <virtualType name="MultiSafepayGooglePayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayGooglePayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayGooglePayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Initialize command -->
    <virtualType name="MultiSafepayGooglePayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGooglePayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Refund command -->
    <virtualType name="MultiSafepayGooglePayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGooglePayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Initialization Request -->
    <virtualType name="MultiSafepayGooglePayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Refund Request -->
    <virtualType name="MultiSafepayGooglePayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Validator Pool -->
    <virtualType name="MultiSafepayGooglePayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayGooglePayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGooglePayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGooglePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- GooglePay Value handlers infrastructure -->
    <virtualType name="MultiSafepayGooglePayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGooglePayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGooglePayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGooglePayConfig</argument>
        </arguments>
    </virtualType>


    <!-- IdealQR Payment Method Facade configuration -->
    <virtualType name="MultiSafepayIdealQRFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealQRConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayIdealQRValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayIdealQRValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayIdealQRCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Configuration reader -->
    <virtualType name="MultiSafepayIdealQRConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealQRConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Config Value Handler Pool -->
    <virtualType name="MultiSafepayIdealQRConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIdealQRConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Config Value Handler -->
    <virtualType name="MultiSafepayIdealQRConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIdealQRConfig</argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Logger, initialized with IdealQRConfig -->
    <virtualType name="MultiSafepayIdealQRLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIdealQRConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayIdealQRLogger</argument>
        </arguments>
    </type>

    <!-- IdealQR Commands infrastructure -->
    <virtualType name="MultiSafepayIdealQRCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayIdealQRInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayIdealQRRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Initialize command -->
    <virtualType name="MultiSafepayIdealQRInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIdealQRInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Refund command -->
    <virtualType name="MultiSafepayIdealQRRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIdealQRRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Initialization Request -->
    <virtualType name="MultiSafepayIdealQRInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Refund Request -->
    <virtualType name="MultiSafepayIdealQRRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Validator Pool -->
    <virtualType name="MultiSafepayIdealQRValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayIdealQRCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayIdealQRCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIdealQRConfig</argument>
        </arguments>
    </virtualType>

    <!-- IdealQR Value handlers infrastructure -->
    <virtualType name="MultiSafepayIdealQRValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIdealQRConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayIdealQRConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIdealQRConfig</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Payment Method Facade configuration -->
    <virtualType name="MultiSafepayMaestroFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MaestroConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayMaestroValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayMaestroValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayMaestroCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Configuration reader -->
    <virtualType name="MultiSafepayMaestroConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MaestroConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Config Value Handler Pool -->
    <virtualType name="MultiSafepayMaestroConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMaestroConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Maestro Config Value Handler -->
    <virtualType name="MultiSafepayMaestroConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMaestroConfig</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Logger, initialized with MaestroConfig -->
    <virtualType name="MultiSafepayMaestroLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMaestroConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayMaestroLogger</argument>
        </arguments>
    </type>

    <!-- Maestro Commands infrastructure -->
    <virtualType name="MultiSafepayMaestroCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayMaestroInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayMaestroRefundCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayMaestroCaptureCommand</item>
                <item name="cancel" xsi:type="string">MultiSafepayMaestroCancelCommand</item>
                <item name="void" xsi:type="string">MultiSafepayMaestroCancelCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Maestro Cancel command -->
    <virtualType name="MultiSafepayMaestroCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroCancelRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CancelClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Cancel Request -->
    <virtualType name="MultiSafepayMaestroCancelRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CancelTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Maestro Capture command -->
    <virtualType name="MultiSafepayMaestroCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroCaptureRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CaptureClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Capture Request -->
    <virtualType name="MultiSafepayMaestroCaptureRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CaptureTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Maestro Initialize command -->
    <virtualType name="MultiSafepayMaestroInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Refund command -->
    <virtualType name="MultiSafepayMaestroRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Initialization Request -->
    <virtualType name="MultiSafepayMaestroInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Maestro Refund Request -->
    <virtualType name="MultiSafepayMaestroRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Maestro Validator Pool -->
    <virtualType name="MultiSafepayMaestroValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayMaestroCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMaestroCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMaestroConfig</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Value handlers infrastructure -->
    <virtualType name="MultiSafepayMaestroValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMaestroConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMaestroConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMaestroConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayMaestroVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMaestroVaultConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayMaestroVaultValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">MultiSafepayMaestroRecurringFacade</argument>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MaestroConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Vault Configuration reader -->
    <virtualType name="MultiSafepayMaestroVaultConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MaestroConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayMaestroVaultValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMaestroVaultConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayMaestroVaultValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMaestroVaultValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayMaestroVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroVaultAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RecurringClient</argument>
        </arguments>
    </virtualType>

    <!-- Maestro Vault Authorize Request -->
    <virtualType name="MultiSafepayMaestroVaultAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RecurringTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Command managers section for Vault -->
    <virtualType name="MultiSafepayMaestroVaultCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">MultiSafepayMaestroRecurringCommandPool</argument>
        </arguments>
    </virtualType>
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="multisafepay_maestro_recurring" xsi:type="string">MultiSafepayMaestroVaultCommandManager</item>
            </argument>
        </arguments>
    </type>

    <!-- MaestroRecurring Payment Method Facade configuration -->
    <virtualType name="MultiSafepayMaestroRecurringFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MaestroRecurringConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayMaestroRecurringValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayMaestroRecurringValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayMaestroRecurringCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Configuration reader -->
    <virtualType name="MultiSafepayMaestroRecurringConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MaestroRecurringConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Config Value Handler Pool -->
    <virtualType name="MultiSafepayMaestroRecurringConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMaestroRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Config Value Handler -->
    <virtualType name="MultiSafepayMaestroRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMaestroRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Logger, initialized with MaestroRecurringConfig -->
    <virtualType name="MultiSafepayMaestroRecurringLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMaestroRecurringConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayMaestroRecurringLogger</argument>
        </arguments>
    </type>

    <!-- MaestroRecurring Commands infrastructure -->
    <virtualType name="MultiSafepayMaestroRecurringCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">MultiSafepayMaestroRecurringAuthorizeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayMaestroRecurringRefundCommand</item>
                <item name="vault_authorize" xsi:type="string">MultiSafepayMaestroVaultAuthorizeCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayMaestroRecurringCaptureCommand</item>
                <item name="cancel" xsi:type="string">MultiSafepayMaestroRecurringCancelCommand</item>
                <item name="void" xsi:type="string">MultiSafepayMaestroRecurringCancelCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Capture command -->
    <virtualType name="MultiSafepayMaestroRecurringCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroRecurringCaptureRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CaptureClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Cancel command -->
    <virtualType name="MultiSafepayMaestroRecurringCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroRecurringCancelRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CancelClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Initialize command -->
    <virtualType name="MultiSafepayMaestroRecurringAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroRecurringAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Refund command -->
    <virtualType name="MultiSafepayMaestroRecurringRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMaestroRecurringRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Cancel Request -->
    <virtualType name="MultiSafepayMaestroRecurringCancelRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CancelTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Capture Request -->
    <virtualType name="MultiSafepayMaestroRecurringCaptureRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CaptureTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Authorize Request -->
    <virtualType name="MultiSafepayMaestroRecurringAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Refund Request -->
    <virtualType name="MultiSafepayMaestroRecurringRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Validator Pool -->
    <virtualType name="MultiSafepayMaestroRecurringValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayMaestroRecurringCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMaestroRecurringCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMaestroRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- MaestroRecurring Value handlers infrastructure -->
    <virtualType name="MultiSafepayMaestroRecurringValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMaestroRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMaestroRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMaestroRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayMastercardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MastercardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayMastercardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayMastercardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayMastercardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Configuration reader -->
    <virtualType name="MultiSafepayMastercardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MastercardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Config Value Handler Pool -->
    <virtualType name="MultiSafepayMastercardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMastercardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Config Value Handler -->
    <virtualType name="MultiSafepayMastercardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMastercardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Logger, initialized with MastercardConfig -->
    <virtualType name="MultiSafepayMastercardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMastercardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayMastercardLogger</argument>
        </arguments>
    </type>

    <!-- Mastercard Commands infrastructure -->
    <virtualType name="MultiSafepayMastercardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayMastercardInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayMastercardRefundCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayMastercardCaptureCommand</item>
                <item name="cancel" xsi:type="string">MultiSafepayMastercardCancelCommand</item>
                <item name="void" xsi:type="string">MultiSafepayMastercardCancelCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Capture command -->
    <virtualType name="MultiSafepayMastercardCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardCaptureRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CaptureClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Capture Request -->
    <virtualType name="MultiSafepayMastercardCaptureRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CaptureTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Initialize command -->
    <virtualType name="MultiSafepayMastercardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Refund command -->
    <virtualType name="MultiSafepayMastercardRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Cancel command -->
    <virtualType name="MultiSafepayMastercardCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMastercardCancelRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CancelClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Cancel Request -->
    <virtualType name="MultiSafepayMastercardCancelRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CancelTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Initialization Request -->
    <virtualType name="MultiSafepayMastercardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Refund Request -->
    <virtualType name="MultiSafepayMastercardRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Validator Pool -->
    <virtualType name="MultiSafepayMastercardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayMastercardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMastercardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMastercardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Mastercard Value handlers infrastructure -->
    <virtualType name="MultiSafepayMastercardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMastercardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMastercardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMastercardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayPaysafecardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\PaysafecardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayPaysafecardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayPaysafecardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayPaysafecardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Configuration reader -->
    <virtualType name="MultiSafepayPaysafecardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\PaysafecardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Config Value Handler Pool -->
    <virtualType name="MultiSafepayPaysafecardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayPaysafecardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Config Value Handler -->
    <virtualType name="MultiSafepayPaysafecardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayPaysafecardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Logger, initialized with PaysafecardConfig -->
    <virtualType name="MultiSafepayPaysafecardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayPaysafecardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayPaysafecardLogger</argument>
        </arguments>
    </type>

    <!-- Paysafecard Commands infrastructure -->
    <virtualType name="MultiSafepayPaysafecardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayPaysafecardInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayPaysafecardRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Initialize command -->
    <virtualType name="MultiSafepayPaysafecardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayPaysafecardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Refund command -->
    <virtualType name="MultiSafepayPaysafecardRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayPaysafecardRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Initialization Request -->
    <virtualType name="MultiSafepayPaysafecardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Refund Request -->
    <virtualType name="MultiSafepayPaysafecardRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Validator Pool -->
    <virtualType name="MultiSafepayPaysafecardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayPaysafecardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayPaysafecardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayPaysafecardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Paysafecard Value handlers infrastructure -->
    <virtualType name="MultiSafepayPaysafecardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayPaysafecardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayPaysafecardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayPaysafecardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Sofort Payment Method Facade configuration -->
    <virtualType name="MultiSafepaySofortFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\SofortConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepaySofortValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepaySofortValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepaySofortCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Sofort Configuration reader -->
    <virtualType name="MultiSafepaySofortConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\SofortConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Sofort Config Value Handler Pool -->
    <virtualType name="MultiSafepaySofortConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepaySofortConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Sofort Config Value Handler -->
    <virtualType name="MultiSafepaySofortConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepaySofortConfig</argument>
        </arguments>
    </virtualType>

    <!-- Sofort Logger, initialized with SofortConfig -->
    <virtualType name="MultiSafepaySofortLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepaySofortConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepaySofortLogger</argument>
        </arguments>
    </type>

    <!-- Sofort Commands infrastructure -->
    <virtualType name="MultiSafepaySofortCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepaySofortInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepaySofortRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Sofort Initialize command -->
    <virtualType name="MultiSafepaySofortInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepaySofortInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Sofort Refund command -->
    <virtualType name="MultiSafepaySofortRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepaySofortRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Sofort Initialization Request -->
    <virtualType name="MultiSafepaySofortInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Sofort Refund Request -->
    <virtualType name="MultiSafepaySofortRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Sofort Validator Pool -->
    <virtualType name="MultiSafepaySofortValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepaySofortCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepaySofortCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepaySofortConfig</argument>
        </arguments>
    </virtualType>

    <!-- Sofort Value handlers infrastructure -->
    <virtualType name="MultiSafepaySofortValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepaySofortConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepaySofortConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepaySofortConfig</argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayTrustPayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\TrustPayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayTrustPayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayTrustPayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayTrustPayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Configuration reader -->
    <virtualType name="MultiSafepayTrustPayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\TrustPayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Config Value Handler Pool -->
    <virtualType name="MultiSafepayTrustPayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayTrustPayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Config Value Handler -->
    <virtualType name="MultiSafepayTrustPayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayTrustPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Logger, initialized with TrustPayConfig -->
    <virtualType name="MultiSafepayTrustPayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayTrustPayConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayTrustPayLogger</argument>
        </arguments>
    </type>

    <!-- TrustPay Commands infrastructure -->
    <virtualType name="MultiSafepayTrustPayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayTrustPayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayTrustPayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Initialize command -->
    <virtualType name="MultiSafepayTrustPayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayTrustPayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Refund command -->
    <virtualType name="MultiSafepayTrustPayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayTrustPayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Initialization Request -->
    <virtualType name="MultiSafepayTrustPayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Refund Request -->
    <virtualType name="MultiSafepayTrustPayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Validator Pool -->
    <virtualType name="MultiSafepayTrustPayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayTrustPayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayTrustPayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayTrustPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- TrustPay Value handlers infrastructure -->
    <virtualType name="MultiSafepayTrustPayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayTrustPayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayTrustPayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayTrustPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Visa Payment Method Facade configuration -->
    <virtualType name="MultiSafepayVisaFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\VisaConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayVisaValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayVisaValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayVisaCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Visa Configuration reader -->
    <virtualType name="MultiSafepayVisaConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\VisaConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Visa Config Value Handler Pool -->
    <virtualType name="MultiSafepayVisaConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVisaConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Visa Config Value Handler -->
    <virtualType name="MultiSafepayVisaConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVisaConfig</argument>
        </arguments>
    </virtualType>

    <!-- Visa Logger, initialized with VisaConfig -->
    <virtualType name="MultiSafepayVisaLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVisaConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayVisaLogger</argument>
        </arguments>
    </type>

    <!-- Visa Commands infrastructure -->
    <virtualType name="MultiSafepayVisaCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayVisaInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayVisaRefundCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayVisaCaptureCommand</item>
                <item name="cancel" xsi:type="string">MultiSafepayVisaCancelCommand</item>
                <item name="void" xsi:type="string">MultiSafepayVisaCancelCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Visa Initialize command -->
    <virtualType name="MultiSafepayVisaInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVisaInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Visa Refund command -->
    <virtualType name="MultiSafepayVisaRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVisaRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Visa Capture command -->
    <virtualType name="MultiSafepayVisaCaptureCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVisaCaptureRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CaptureClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CaptureResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Visa Capture Request -->
    <virtualType name="MultiSafepayVisaCaptureRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CaptureTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Visa Cancel command -->
    <virtualType name="MultiSafepayVisaCancelCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVisaCancelRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\CancelClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\CancelResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Visa Cancel Request -->
    <virtualType name="MultiSafepayVisaCancelRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\CancelTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Visa Initialization Request -->
    <virtualType name="MultiSafepayVisaInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Visa Refund Request -->
    <virtualType name="MultiSafepayVisaRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Visa Validator Pool -->
    <virtualType name="MultiSafepayVisaValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayVisaCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayVisaCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVisaConfig</argument>
        </arguments>
    </virtualType>

    <!-- Visa Value handlers infrastructure -->
    <virtualType name="MultiSafepayVisaValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVisaConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayVisaConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVisaConfig</argument>
        </arguments>
    </virtualType>

    <!-- Alipay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayAlipayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AlipayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayAlipayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayAlipayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayAlipayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Alipay Configuration reader -->
    <virtualType name="MultiSafepayAlipayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AlipayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Alipay Config Value Handler Pool -->
    <virtualType name="MultiSafepayAlipayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAlipayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Alipay Config Value Handler -->
    <virtualType name="MultiSafepayAlipayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAlipayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Alipay Logger, initialized with MultiSafepayAlipayConfig -->
    <virtualType name="MultiSafepayAlipayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAlipayConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayAlipayLogger</argument>
        </arguments>
    </type>

    <!-- Alipay Commands infrastructure -->
    <virtualType name="MultiSafepayAlipayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayAlipayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayAlipayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Alipay Initialize command -->
    <virtualType name="MultiSafepayAlipayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAlipayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Alipay Refund command -->
    <virtualType name="MultiSafepayAlipayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAlipayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Alipay Initialization Request -->
    <virtualType name="MultiSafepayAlipayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Alipay Refund Request -->
    <virtualType name="MultiSafepayAlipayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Alipay Validator Pool -->
    <virtualType name="MultiSafepayAlipayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayAlipayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAlipayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAlipayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Alipay Value handlers infrastructure -->
    <virtualType name="MultiSafepayAlipayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAlipayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAlipayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAlipayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Payment Method Facade configuration -->
    <virtualType name="MultiSafepayAlipayplusFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AlipayplusConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayAlipayplusValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayAlipayplusValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayAlipayplusCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Configuration reader -->
    <virtualType name="MultiSafepayAlipayplusConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AlipayplusConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Config Value Handler Pool -->
    <virtualType name="MultiSafepayAlipayplusConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAlipayplusConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Config Value Handler -->
    <virtualType name="MultiSafepayAlipayplusConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAlipayplusConfig</argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Logger, initialized with MultiSafepayAlipayplusConfig -->
    <virtualType name="MultiSafepayAlipayplusLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAlipayplusConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayAlipayplusLogger</argument>
        </arguments>
    </type>

    <!-- Alipay+ ™ Partner Commands infrastructure -->
    <virtualType name="MultiSafepayAlipayplusCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayAlipayplusInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayAlipayplusRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Initialize command -->
    <virtualType name="MultiSafepayAlipayplusInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAlipayplusInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Refund command -->
    <virtualType name="MultiSafepayAlipayplusRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAlipayplusRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Initialization Request -->
    <virtualType name="MultiSafepayAlipayplusInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Refund Request -->
    <virtualType name="MultiSafepayAlipayplusRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Validator Pool -->
    <virtualType name="MultiSafepayAlipayplusValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayAlipayplusCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAlipayplusCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAlipayplusConfig</argument>
        </arguments>
    </virtualType>

    <!-- Alipay+ ™ Partner Value handlers infrastructure -->
    <virtualType name="MultiSafepayAlipayplusValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAlipayplusConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAlipayplusConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAlipayplusConfig</argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayAmazonPayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmazonPayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayAmazonPayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayAmazonPayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayAmazonPayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Configuration reader -->
    <virtualType name="MultiSafepayAmazonPayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmazonPayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Config Value Handler Pool -->
    <virtualType name="MultiSafepayAmazonPayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAmazonPayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Config Value Handler -->
    <virtualType name="MultiSafepayAmazonPayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAmazonPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Logger, initialized with MultiSafepayAmazonPayConfig -->
    <virtualType name="MultiSafepayAmazonPayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAmazonPayConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayAmazonPayLogger</argument>
        </arguments>
    </type>

    <!-- Amazon Pay Commands infrastructure -->
    <virtualType name="MultiSafepayAmazonPayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayAmazonPayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayAmazonPayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Initialize command -->
    <virtualType name="MultiSafepayAmazonPayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAmazonPayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Refund command -->
    <virtualType name="MultiSafepayAmazonPayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayAmazonPayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Initialization Request -->
    <virtualType name="MultiSafepayAmazonPayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Refund Request -->
    <virtualType name="MultiSafepayAmazonPayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Validator Pool -->
    <virtualType name="MultiSafepayAmazonPayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayAmazonPayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAmazonPayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayAmazonPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Amazon Pay Value handlers infrastructure -->
    <virtualType name="MultiSafepayAmazonPayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayAmazonPayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayAmazonPayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayAmazonPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Payment Method Facade configuration -->
    <virtualType name="MultiSafepayDirectBankTransferFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectBankTransferConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayDirectBankTransferValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayDirectBankTransferValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayDirectBankTransferCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Configuration reader -->
    <virtualType name="MultiSafepayDirectBankTransferConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectBankTransferConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Config Value Handler Pool -->
    <virtualType name="MultiSafepayDirectBankTransferConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDirectBankTransferConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Config Value Handler -->
    <virtualType name="MultiSafepayDirectBankTransferConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDirectBankTransferConfig</argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Logger, initialized with DirectBankTransferConfig -->
    <virtualType name="MultiSafepayDirectBankTransferLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDirectBankTransferConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayDirectBankTransferLogger</argument>
        </arguments>
    </type>

    <!-- DirectBankTransfer Commands infrastructure -->
    <virtualType name="MultiSafepayDirectBankTransferCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayDirectBankTransferInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayDirectBankTransferRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Initialize command -->
    <virtualType name="MultiSafepayDirectBankTransferInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDirectBankTransferInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Refund command -->
    <virtualType name="MultiSafepayDirectBankTransferRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDirectBankTransferRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Initialize Request -->
    <virtualType name="MultiSafepayDirectBankTransferInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Refund Request -->
    <virtualType name="MultiSafepayDirectBankTransferRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Validator Pool -->
    <virtualType name="MultiSafepayDirectBankTransferValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayDirectBankTransferCountryValidator</item>
                <item name="global" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\DirectBankTransferValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayDirectBankTransferCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDirectBankTransferConfig</argument>
        </arguments>
    </virtualType>

    <!-- DirectBankTransfer Value handlers infrastructure -->
    <virtualType name="MultiSafepayDirectBankTransferValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDirectBankTransferConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayDirectBankTransferConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDirectBankTransferConfig</argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Payment Method Facade configuration -->
    <virtualType name="MultiSafepayBankTransferFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BankTransferConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayBankTransferValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayBankTransferValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayBankTransferCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Configuration reader -->
    <virtualType name="MultiSafepayBankTransferConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\BankTransferConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Config Value Handler Pool -->
    <virtualType name="MultiSafepayBankTransferConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBankTransferConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Config Value Handler -->
    <virtualType name="MultiSafepayBankTransferConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBankTransferConfig</argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Logger, initialized with MultiSafepayBankTransferConfig -->
    <virtualType name="MultiSafepayBankTransferLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBankTransferConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayBankTransferLogger</argument>
        </arguments>
    </type>

    <!-- BankTransfer Commands infrastructure -->
    <virtualType name="MultiSafepayBankTransferCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayBankTransferInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayBankTransferRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Initialize command -->
    <virtualType name="MultiSafepayBankTransferInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBankTransferInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Refund command -->
    <virtualType name="MultiSafepayBankTransferRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBankTransferRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Initialize Request -->
    <virtualType name="MultiSafepayBankTransferInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Refund Request -->
    <virtualType name="MultiSafepayBankTransferRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Validator Pool -->
    <virtualType name="MultiSafepayBankTransferValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayBankTransferCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBankTransferCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBankTransferConfig</argument>
        </arguments>
    </virtualType>

    <!-- BankTransfer Value handlers infrastructure -->
    <virtualType name="MultiSafepayBankTransferValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBankTransferConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBankTransferConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBankTransferConfig</argument>
        </arguments>
    </virtualType>

    <!-- Santander Payment Method Facade configuration -->
    <virtualType name="MultiSafepaySantanderFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\SantanderConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepaySantanderValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepaySantanderValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepaySantanderCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Santander Configuration reader -->
    <virtualType name="MultiSafepaySantanderConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\SantanderConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Santander Config Value Handler Pool -->
    <virtualType name="MultiSafepaySantanderConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepaySantanderConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Santander Config Value Handler -->
    <virtualType name="MultiSafepaySantanderConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepaySantanderConfig</argument>
        </arguments>
    </virtualType>

    <!-- Santander Logger, initialized with MultiSafepaySantanderConfig -->
    <virtualType name="MultiSafepaySantanderLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepaySantanderConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepaySantanderLogger</argument>
        </arguments>
    </type>

    <!-- Santander Commands infrastructure -->
    <virtualType name="MultiSafepaySantanderCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepaySantanderInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepaySantanderRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Santander Initialize command -->
    <virtualType name="MultiSafepaySantanderInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepaySantanderInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Santander Refund command -->
    <virtualType name="MultiSafepaySantanderRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepaySantanderRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Santander Initialization Request -->
    <virtualType name="MultiSafepaySantanderInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Santander Refund Request -->
    <virtualType name="MultiSafepaySantanderRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Santander Validator Pool -->
    <virtualType name="MultiSafepaySantanderValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepaySantanderCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepaySantanderCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepaySantanderConfig</argument>
        </arguments>
    </virtualType>

    <!-- Santander Value handlers infrastructure -->
    <virtualType name="MultiSafepaySantanderValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepaySantanderConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepaySantanderConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepaySantanderConfig</argument>
        </arguments>
    </virtualType>

    <!-- CBC Payment Method Facade configuration -->
    <virtualType name="MultiSafepayCBCFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\CBCConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayCBCValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayCBCValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayCBCCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- CBC Configuration reader -->
    <virtualType name="MultiSafepayCBCConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\CBCConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- CBC Config Value Handler Pool -->
    <virtualType name="MultiSafepayCBCConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayCBCConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CBC Config Value Handler -->
    <virtualType name="MultiSafepayCBCConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayCBCConfig</argument>
        </arguments>
    </virtualType>

    <!-- CBC Logger, initialized with MultiSafepayCBCConfig -->
    <virtualType name="MultiSafepayCBCLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayCBCConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayCBCLogger</argument>
        </arguments>
    </type>

    <!-- CBC Commands infrastructure -->
    <virtualType name="MultiSafepayCBCCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayCBCInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayCBCRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CBC Initialize command -->
    <virtualType name="MultiSafepayCBCInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCBCInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- CBC Refund command -->
    <virtualType name="MultiSafepayCBCRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayCBCRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- CBC Initialization Request -->
    <virtualType name="MultiSafepayCBCInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CBC Refund Request -->
    <virtualType name="MultiSafepayCBCRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CBC Validator Pool -->
    <virtualType name="MultiSafepayCBCValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayCBCCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayCBCCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayCBCConfig</argument>
        </arguments>
    </virtualType>

    <!-- CBC Value handlers infrastructure -->
    <virtualType name="MultiSafepayCBCValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayCBCConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayCBCConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayCBCConfig</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Payment Method Facade configuration -->
    <virtualType name="MultiSafepayDirectDebitFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectDebitConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayDirectDebitValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayDirectDebitValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayDirectDebitCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Configuration reader -->
    <virtualType name="MultiSafepayDirectDebitConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectDebitConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Config Value Handler Pool -->
    <virtualType name="MultiSafepayDirectDebitConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDirectDebitConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Config Value Handler -->
    <virtualType name="MultiSafepayDirectDebitConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDirectDebitConfig</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Logger, initialized with MultiSafepayDirectDebitConfig -->
    <virtualType name="MultiSafepayDirectDebitLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDirectDebitConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayDirectDebitLogger</argument>
        </arguments>
    </type>

    <!-- DirectDebit Commands infrastructure -->
    <virtualType name="MultiSafepayDirectDebitCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayDirectDebitInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayDirectDebitRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Initialize command -->
    <virtualType name="MultiSafepayDirectDebitInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDirectDebitInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Refund command -->
    <virtualType name="MultiSafepayDirectDebitRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDirectDebitRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Initialization Request -->
    <virtualType name="MultiSafepayDirectDebitInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Refund Request -->
    <virtualType name="MultiSafepayDirectDebitRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Validator Pool -->
    <virtualType name="MultiSafepayDirectDebitValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayDirectDebitCountryValidator</item>
                <item name="global" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\DirectDebitValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayDirectDebitCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDirectDebitConfig</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Value handlers infrastructure -->
    <virtualType name="MultiSafepayDirectDebitValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDirectDebitConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayDirectDebitConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDirectDebitConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayDirectDebitVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDirectDebitVaultConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayDirectDebitVaultValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">MultiSafepayDirectDebitRecurringFacade</argument>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectDebitConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Vault Configuration reader -->
    <virtualType name="MultiSafepayDirectDebitVaultConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectDebitConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayDirectDebitVaultValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDirectDebitVaultConfig</argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayDirectDebitVaultValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDirectDebitVaultValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="MultiSafepayDirectDebitVaultAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDirectDebitVaultAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RecurringClient</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebit Vault Authorize Request -->
    <virtualType name="MultiSafepayDirectDebitVaultAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RecurringTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Command managers section for Vault -->
    <virtualType name="MultiSafepayDirectDebitVaultCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">MultiSafepayDirectDebitRecurringCommandPool</argument>
        </arguments>
    </virtualType>
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="multisafepay_directdebit_recurring" xsi:type="string">MultiSafepayDirectDebitVaultCommandManager</item>
            </argument>
        </arguments>
    </type>

    <!-- DirectDebitRecurring Payment Method Facade configuration -->
    <virtualType name="MultiSafepayDirectDebitRecurringFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectDebitRecurringConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayDirectDebitRecurringValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayDirectDebitRecurringValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayDirectDebitRecurringCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Configuration reader -->
    <virtualType name="MultiSafepayDirectDebitRecurringConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectDebitRecurringConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Config Value Handler Pool -->
    <virtualType name="MultiSafepayDirectDebitRecurringConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDirectDebitRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Config Value Handler -->
    <virtualType name="MultiSafepayDirectDebitRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDirectDebitRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Logger, initialized with DirectDebitRecurringConfig -->
    <virtualType name="MultiSafepayDirectDebitRecurringLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDirectDebitRecurringConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayDirectDebitRecurringLogger</argument>
        </arguments>
    </type>

    <!-- DirectDebitRecurring Commands infrastructure -->
    <virtualType name="MultiSafepayDirectDebitRecurringCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">MultiSafepayDirectDebitRecurringAuthorizeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayDirectDebitRecurringRefundCommand</item>
                <item name="vault_authorize" xsi:type="string">MultiSafepayDirectDebitVaultAuthorizeCommand</item>
                <item name="capture" xsi:type="string">MultiSafepayVisaCaptureCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Initialize command -->
    <virtualType name="MultiSafepayDirectDebitRecurringAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDirectDebitRecurringAuthorizeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Refund command -->
    <virtualType name="MultiSafepayDirectDebitRecurringRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayDirectDebitRecurringRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Authorize Request -->
    <virtualType name="MultiSafepayDirectDebitRecurringAuthorizeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Refund Request -->
    <virtualType name="MultiSafepayDirectDebitRecurringRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Validator Pool -->
    <virtualType name="MultiSafepayDirectDebitRecurringValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayDirectDebitRecurringCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayDirectDebitRecurringCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayDirectDebitRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- DirectDebitRecurring Value handlers infrastructure -->
    <virtualType name="MultiSafepayDirectDebitRecurringValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayDirectDebitRecurringConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayDirectDebitRecurringConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayDirectDebitRecurringConfig</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Payment Method Facade configuration -->
    <virtualType name="MultiSafepayEinvoicingFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\EinvoicingConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayEinvoicingValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayEinvoicingValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayEinvoicingCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Configuration reader -->
    <virtualType name="MultiSafepayEinvoicingConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\EinvoicingConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Config Value Handler Pool -->
    <virtualType name="MultiSafepayEinvoicingConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayEinvoicingConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Config Value Handler -->
    <virtualType name="MultiSafepayEinvoicingConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayEinvoicingConfig</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Logger, initialized with MultiSafepayEinvoicingConfig -->
    <virtualType name="MultiSafepayEinvoicingLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayEinvoicingConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayEinvoicingLogger</argument>
        </arguments>
    </type>

    <!-- MultiSafepayEinvoicing Commands infrastructure -->
    <virtualType name="MultiSafepayEinvoicingCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayEinvoicingInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayEinvoicingRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Initialize command -->
    <virtualType name="MultiSafepayEinvoicingInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayEinvoicingInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Refund command -->
    <virtualType name="MultiSafepayEinvoicingRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayEinvoicingRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Initialize Request -->
    <virtualType name="MultiSafepayEinvoicingInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Refund Request -->
    <virtualType name="MultiSafepayEinvoicingRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Validator Pool -->
    <virtualType name="MultiSafepayEinvoicingValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayEinvoicingCountryValidator</item>
                <item name="global" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\EinvoicingValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayEinvoicingCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayEinvoicingConfig</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayEinvoicing Value handlers infrastructure -->
    <virtualType name="MultiSafepayEinvoicingValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayEinvoicingConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayEinvoicingConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayEinvoicingConfig</argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayINGHomePayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\INGHomePayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayINGHomePayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayINGHomePayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayINGHomePayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Configuration reader -->
    <virtualType name="MultiSafepayINGHomePayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\INGHomePayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Config Value Handler Pool -->
    <virtualType name="MultiSafepayINGHomePayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayINGHomePayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Config Value Handler -->
    <virtualType name="MultiSafepayINGHomePayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayINGHomePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Logger, initialized with MultiSafepayINGHomePayConfig -->
    <virtualType name="MultiSafepayINGHomePayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayINGHomePayConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayINGHomePayLogger</argument>
        </arguments>
    </type>

    <!-- INGHomePay Commands infrastructure -->
    <virtualType name="MultiSafepayINGHomePayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayINGHomePayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayINGHomePayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Initialize command -->
    <virtualType name="MultiSafepayINGHomePayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayINGHomePayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Refund command -->
    <virtualType name="MultiSafepayINGHomePayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayINGHomePayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Initialization Request -->
    <virtualType name="MultiSafepayINGHomePayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Refund Request -->
    <virtualType name="MultiSafepayINGHomePayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Validator Pool -->
    <virtualType name="MultiSafepayINGHomePayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayINGHomePayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayINGHomePayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayINGHomePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- INGHomePay Value handlers infrastructure -->
    <virtualType name="MultiSafepayINGHomePayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayINGHomePayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayINGHomePayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayINGHomePayConfig</argument>
        </arguments>
    </virtualType>

    <!-- KBC Payment Method Facade configuration -->
    <virtualType name="MultiSafepayKBCFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\KBCConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayKBCValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayKBCValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayKBCCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- KBC Configuration reader -->
    <virtualType name="MultiSafepayKBCConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\KBCConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- KBC Config Value Handler Pool -->
    <virtualType name="MultiSafepayKBCConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayKBCConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- KBC Config Value Handler -->
    <virtualType name="MultiSafepayKBCConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayKBCConfig</argument>
        </arguments>
    </virtualType>

    <!-- KBC Logger, initialized with MultiSafepayKBCConfig -->
    <virtualType name="MultiSafepayKBCLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayKBCConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayKBCLogger</argument>
        </arguments>
    </type>

    <!-- KBC Commands infrastructure -->
    <virtualType name="MultiSafepayKBCCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayKBCInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayKBCRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- KBC Initialize command -->
    <virtualType name="MultiSafepayKBCInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayKBCInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- KBC Refund command -->
    <virtualType name="MultiSafepayKBCRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayKBCRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- KBC Initialization Request -->
    <virtualType name="MultiSafepayKBCInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- KBC Refund Request -->
    <virtualType name="MultiSafepayKBCRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- KBC Validator Pool -->
    <virtualType name="MultiSafepayKBCValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayKBCCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayKBCCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayKBCConfig</argument>
        </arguments>
    </virtualType>

    <!-- KBC Value handlers infrastructure -->
    <virtualType name="MultiSafepayKBCValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayKBCConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayKBCConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayKBCConfig</argument>
        </arguments>
    </virtualType>

    <!-- Paypal Payment Method Facade configuration -->
    <virtualType name="MultiSafepayPaypalFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\PaypalConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayPaypalValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayPaypalValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayPaypalCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Paypal Configuration reader -->
    <virtualType name="MultiSafepayPaypalConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\PaypalConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Paypal Config Value Handler Pool -->
    <virtualType name="MultiSafepayPaypalConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayPaypalConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Paypal Config Value Handler -->
    <virtualType name="MultiSafepayPaypalConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayPaypalConfig</argument>
        </arguments>
    </virtualType>

    <!-- Paypal Logger, initialized with MultiSafepayPaypalConfig -->
    <virtualType name="MultiSafepayPaypalLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayPaypalConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayPaypalLogger</argument>
        </arguments>
    </type>

    <!-- Paypal Commands infrastructure -->
    <virtualType name="MultiSafepayPaypalCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayPaypalInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayPaypalRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Paypal Initialize command -->
    <virtualType name="MultiSafepayPaypalInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayPaypalInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Paypal Refund command -->
    <virtualType name="MultiSafepayPaypalRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayPaypalRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Paypal Initialization Request -->
    <virtualType name="MultiSafepayPaypalInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Paypal Refund Request -->
    <virtualType name="MultiSafepayPaypalRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Paypal Validator Pool -->
    <virtualType name="MultiSafepayPaypalValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayPaypalCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayPaypalCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayPaypalConfig</argument>
        </arguments>
    </virtualType>

    <!-- Paypal Value handlers infrastructure -->
    <virtualType name="MultiSafepayPaypalValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayPaypalConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayPaypalConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayPaypalConfig</argument>
        </arguments>
    </virtualType>

    <!-- Trustly Payment Method Facade configuration -->
    <virtualType name="MultiSafepayTrustlyFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\TrustlyConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayTrustlyValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayTrustlyValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayTrustlyCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Trustly Configuration reader -->
    <virtualType name="MultiSafepayTrustlyConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\TrustlyConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Trustly Config Value Handler Pool -->
    <virtualType name="MultiSafepayTrustlyConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayTrustlyConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Trustly Config Value Handler -->
    <virtualType name="MultiSafepayTrustlyConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayTrustlyConfig</argument>
        </arguments>
    </virtualType>

    <!-- Trustly Logger, initialized with MultiSafepayTrustlyConfig -->
    <virtualType name="MultiSafepayTrustlyLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayTrustlyConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayTrustlyLogger</argument>
        </arguments>
    </type>

    <!-- Trustly Commands infrastructure -->
    <virtualType name="MultiSafepayTrustlyCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayTrustlyInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayTrustlyRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Trustly Initialize command -->
    <virtualType name="MultiSafepayTrustlyInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayTrustlyInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Trustly Refund command -->
    <virtualType name="MultiSafepayTrustlyRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayTrustlyRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Trustly Initialization Request -->
    <virtualType name="MultiSafepayTrustlyInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Trustly Refund Request -->
    <virtualType name="MultiSafepayTrustlyRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Trustly Validator Pool -->
    <virtualType name="MultiSafepayTrustlyValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayTrustlyCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayTrustlyCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayTrustlyConfig</argument>
        </arguments>
    </virtualType>

    <!-- Trustly Value handlers infrastructure -->
    <virtualType name="MultiSafepayTrustlyValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayTrustlyConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayTrustlyConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayTrustlyConfig</argument>
        </arguments>
    </virtualType>

    <!-- In3 Payment Method Facade configuration -->
    <virtualType name="MultiSafepayIn3Facade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\In3ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayIn3ValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayIn3ValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayIn3CommandPool</argument>
        </arguments>
    </virtualType>

    <!-- In3 Configuration reader -->
    <virtualType name="MultiSafepayIn3Config" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\In3ConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- In3 Config Value Handler Pool -->
    <virtualType name="MultiSafepayIn3ConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIn3ConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- In3 Config Value Handler -->
    <virtualType name="MultiSafepayIn3ConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIn3Config</argument>
        </arguments>
    </virtualType>

    <!-- In3 Logger, initialized with MultiSafepayIn3Config -->
    <virtualType name="MultiSafepayIn3Logger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIn3Config</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayIn3Logger</argument>
        </arguments>
    </type>

    <!-- In3 Commands infrastructure -->
    <virtualType name="MultiSafepayIn3CommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayIn3InitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayIn3RefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- In3 Initialize command -->
    <virtualType name="MultiSafepayIn3InitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIn3InitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- In3 Refund command -->
    <virtualType name="MultiSafepayIn3RefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIn3RefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\ShoppingCartRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- In3 Initialization Request -->
    <virtualType name="MultiSafepayIn3InitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- In3 Refund Request -->
    <virtualType name="MultiSafepayIn3RefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- In3 Validator Pool -->
    <virtualType name="MultiSafepayIn3ValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayIn3CountryValidator</item>
                <item name="global" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\In3Validator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayIn3CountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIn3Config</argument>
        </arguments>
    </virtualType>

    <!-- In3 Value handlers infrastructure -->
    <virtualType name="MultiSafepayIn3ValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIn3ConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayIn3ConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIn3Config</argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Payment Method Facade configuration -->
    <virtualType name="MultiSafepayIn3B2bFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\In3B2bConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayIn3B2bValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayIn3B2bValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayIn3B2bCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Configuration reader -->
    <virtualType name="MultiSafepayIn3B2bConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\In3B2bConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Config Value Handler Pool -->
    <virtualType name="MultiSafepayIn3B2bConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIn3B2bConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Config Value Handler -->
    <virtualType name="MultiSafepayIn3B2bConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIn3B2bConfig</argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Logger, initialized with MultiSafepayIn3B2bConfig -->
    <virtualType name="MultiSafepayIn3B2bLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIn3B2bConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayIn3B2bLogger</argument>
        </arguments>
    </type>

    <!-- In3B2b Commands infrastructure -->
    <virtualType name="MultiSafepayIn3B2bCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayIn3B2bInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayIn3B2bRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Initialize command -->
    <virtualType name="MultiSafepayIn3B2bInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIn3B2bInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Refund command -->
    <virtualType name="MultiSafepayIn3B2bRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayIn3B2bRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\ShoppingCartRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Initialization Request -->
    <virtualType name="MultiSafepayIn3B2bInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Refund Request -->
    <virtualType name="MultiSafepayIn3B2bRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Validator Pool -->
    <virtualType name="MultiSafepayIn3B2bValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayIn3B2bCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayIn3B2bCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayIn3B2bConfig</argument>
        </arguments>
    </virtualType>

    <!-- In3B2b Value handlers infrastructure -->
    <virtualType name="MultiSafepayIn3B2bValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayIn3B2bConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayIn3B2bConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayIn3B2bConfig</argument>
        </arguments>
    </virtualType>

    <!-- MyBank Payment Method Facade configuration -->
    <virtualType name="MyBankFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MyBankConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MyBankValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MyBankValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MyBankCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- MyBank Configuration reader -->
    <virtualType name="MyBankConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MyBankConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- MyBank Config Value Handler Pool -->
    <virtualType name="MyBankConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MyBankConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MyBank Config Value Handler -->
    <virtualType name="MyBankConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MyBankConfig</argument>
        </arguments>
    </virtualType>

    <!-- MyBank Logger, initialized with MyBankConfig -->
    <virtualType name="MyBankLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MyBankConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MyBankLogger</argument>
        </arguments>
    </type>

    <!-- MyBank Commands infrastructure -->
    <virtualType name="MyBankCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MyBankInitializeCommand</item>
                <item name="refund" xsi:type="string">MyBankRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MyBank Initialize command -->
    <virtualType name="MyBankInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MyBankInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- MyBank Refund command -->
    <virtualType name="MyBankRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MyBankRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MyBank Initialization Request -->
    <virtualType name="MyBankInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MyBank Refund Request -->
    <virtualType name="MyBankRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MyBank Validator Pool -->
    <virtualType name="MyBankValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MyBankCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MyBankCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MyBankConfig</argument>
        </arguments>
    </virtualType>
    <!-- MyBank Value handlers infrastructure -->
    <virtualType name="MyBankValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MyBankConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MyBankConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MyBankConfig</argument>
        </arguments>
    </virtualType>

    <!-- Zinia Payment Method Facade configuration -->
    <virtualType name="MultiSafepayZiniaFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\ZiniaConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayZiniaValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayZiniaValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayZiniaCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Zinia Configuration reader -->
    <virtualType name="MultiSafepayZiniaConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\ZiniaConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Zinia Config Value Handler Pool -->
    <virtualType name="MultiSafepayZiniaConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayZiniaConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Zinia Config Value Handler -->
    <virtualType name="MultiSafepayZiniaConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayZiniaConfig</argument>
        </arguments>
    </virtualType>

    <!-- Zinia Logger, initialized with MultiSafepayZiniaConfig -->
    <virtualType name="MultiSafepayZiniaLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayZiniaConfig</argument>
        </arguments>
    </virtualType>

    <type name="\MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayZiniaLogger</argument>
        </arguments>
    </type>

    <!-- Zinia Commands infrastructure -->
    <virtualType name="MultiSafepayZiniaCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayZiniaInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayZiniaRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Zinia Initialize command -->
    <virtualType name="MultiSafepayZiniaInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayZiniaInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Zinia Refund command -->
    <virtualType name="MultiSafepayZiniaRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayZiniaRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\ShoppingCartRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Zinia Initialization Request -->
    <virtualType name="MultiSafepayZiniaInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Zinia Refund Request -->
    <virtualType name="MultiSafepayZiniaRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\ShoppingCartRefundRequestBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Zinia Validator Pool -->
    <virtualType name="MultiSafepayZiniaValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayZiniaCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayZiniaCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayZiniaConfig</argument>
        </arguments>
    </virtualType>

    <!-- Zinia Value handlers infrastructure -->
    <virtualType name="MultiSafepayZiniaValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayZiniaConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayZiniaConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayZiniaConfig</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayGenericGateway Payment Method Facade configuration -->
    <virtualType name="MultiSafepayGenericGatewayFacade" type="MultiSafepay\ConnectCore\Model\Method\GenericAdapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\GenericGatewayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayGenericGatewayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayGenericGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayGenericGateway Configuration reader -->
    <virtualType name="MultiSafepayGenericGatewayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\GenericGatewayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayGenericGateway Value handlers infrastructure -->
    <virtualType name="MultiSafepayGenericGatewayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGenericGatewayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGenericGatewayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGenericGatewayConfig</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayGenericGateway Commands infrastructure -->
    <virtualType name="MultiSafepayGenericGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayGenericGatewayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayGenericGatewayRefundCommand</item>
                <item name="fetch_transaction_information" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Command\FetchTransactionInfo</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayGenericGateway Initialize command -->
    <virtualType name="MultiSafepayGenericGatewayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGenericGatewayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayGenericGateway Refund command -->
    <virtualType name="MultiSafepayGenericGatewayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGenericGatewayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\GenericGatewayRefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayGenericGateway Initialization Request -->
    <virtualType name="MultiSafepayGenericGatewayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- MultiSafepayGenericGateway Refund Request -->
    <virtualType name="MultiSafepayGenericGatewayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\GenericGatewayRefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Giftcards -->

    <!-- Baby Giftcard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayBabyGiftcardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BabyGiftcardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayBabyGiftcardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayBabyGiftcardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayBabyGiftcardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Baby Giftcard Configuration reader -->
    <virtualType name="MultiSafepayBabyGiftcardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BabyGiftcardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Baby Giftcard Config Value Handler Pool -->
    <virtualType name="MultiSafepayBabyGiftcardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBabyGiftcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Baby Giftcard Config Value Handler -->
    <virtualType name="MultiSafepayBabyGiftcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBabyGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Baby Giftcard Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayBabyGiftcardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBabyGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayBabyGiftcardLogger</argument>
        </arguments>
    </type>

    <!-- Baby Giftcard Commands infrastructure -->
    <virtualType name="MultiSafepayBabyGiftcardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayBabyGiftcardInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Baby Giftcard Initialize command -->
    <virtualType name="MultiSafepayBabyGiftcardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBabyGiftcardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>


    <!-- Baby Giftcard Initialization Request -->
    <virtualType name="MultiSafepayBabyGiftcardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Baby Giftcard Validator Pool -->
    <virtualType name="MultiSafepayBabyGiftcardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayBabyGiftcardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBabyGiftcardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBabyGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Baby Giftcard Value handlers infrastructure -->
    <virtualType name="MultiSafepayBabyGiftcardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBabyGiftcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBabyGiftcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBabyGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Payment Method Facade configuration -->
    <virtualType name="MultiSafepayBeautyAndWellnessFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BeautyAndWellnessConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayBeautyAndWellnessValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayBeautyAndWellnessValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayBeautyAndWellnessCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Configuration reader -->
    <virtualType name="MultiSafepayBeautyAndWellnessConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BeautyAndWellnessConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Config Value Handler Pool -->
    <virtualType name="MultiSafepayBeautyAndWellnessConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBeautyAndWellnessConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Config Value Handler -->
    <virtualType name="MultiSafepayBeautyAndWellnessConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBeautyAndWellnessConfig</argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayBeautyAndWellnessLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBeautyAndWellnessConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayBeautyAndWellnessLogger</argument>
        </arguments>
    </type>

    <!-- Beauty And Wellness Commands infrastructure -->
    <virtualType name="MultiSafepayBeautyAndWellnessCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayBeautyAndWellnessInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Initialize command -->
    <virtualType name="MultiSafepayBeautyAndWellnessInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBeautyAndWellnessInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Initialization Request -->
    <virtualType name="MultiSafepayBeautyAndWellnessInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Validator Pool -->
    <virtualType name="MultiSafepayBeautyAndWellnessValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayBeautyAndWellnessCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBeautyAndWellnessCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBeautyAndWellnessConfig</argument>
        </arguments>
    </virtualType>

    <!-- Beauty And Wellness Value handlers infrastructure -->
    <virtualType name="MultiSafepayBeautyAndWellnessValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBeautyAndWellnessConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBeautyAndWellnessConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBeautyAndWellnessConfig</argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Payment Method Facade configuration -->
    <virtualType name="MultiSafepayBoekenbonFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BoekenbonConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayBoekenbonValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayBoekenbonValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayBoekenbonCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Configuration reader -->
    <virtualType name="MultiSafepayBoekenbonConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BoekenbonConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Config Value Handler Pool -->
    <virtualType name="MultiSafepayBoekenbonConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBoekenbonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Config Value Handler -->
    <virtualType name="MultiSafepayBoekenbonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBoekenbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayBoekenbonLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBoekenbonConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayBoekenbonLogger</argument>
        </arguments>
    </type>

    <!-- Boekenbon Commands infrastructure -->
    <virtualType name="MultiSafepayBoekenbonCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayBoekenbonInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Initialize command -->
    <virtualType name="MultiSafepayBoekenbonInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayBoekenbonInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Initialization Request -->
    <virtualType name="MultiSafepayBoekenbonInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Validator Pool -->
    <virtualType name="MultiSafepayBoekenbonValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayBoekenbonCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBoekenbonCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayBoekenbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Boekenbon Value handlers infrastructure -->
    <virtualType name="MultiSafepayBoekenbonValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayBoekenbonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayBoekenbonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayBoekenbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Payment Method Facade configuration -->
    <virtualType name="MultiSafepayFashionChequeFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FashionChequeConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayFashionChequeValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayFashionChequeValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayFashionChequeCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Configuration reader -->
    <virtualType name="MultiSafepayFashionChequeConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FashionChequeConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Config Value Handler Pool -->
    <virtualType name="MultiSafepayFashionChequeConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayFashionChequeConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Config Value Handler -->
    <virtualType name="MultiSafepayFashionChequeConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayFashionChequeConfig</argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayFashionChequeLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayFashionChequeConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayFashionChequeLogger</argument>
        </arguments>
    </type>

    <!-- FashionCheque Commands infrastructure -->
    <virtualType name="MultiSafepayFashionChequeCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayFashionChequeInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Initialize command -->
    <virtualType name="MultiSafepayFashionChequeInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayFashionChequeInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Initialization Request -->
    <virtualType name="MultiSafepayFashionChequeInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Validator Pool -->
    <virtualType name="MultiSafepayFashionChequeValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayFashionChequeCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayFashionChequeCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayFashionChequeConfig</argument>
        </arguments>
    </virtualType>

    <!-- FashionCheque Value handlers infrastructure -->
    <virtualType name="MultiSafepayFashionChequeValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayFashionChequeConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayFashionChequeConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayFashionChequeConfig</argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayFashionGiftcardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FashionGiftcardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayFashionGiftcardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayFashionGiftcardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayFashionGiftcardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Configuration reader -->
    <virtualType name="MultiSafepayFashionGiftcardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FashionGiftcardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Config Value Handler Pool -->
    <virtualType name="MultiSafepayFashionGiftcardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayFashionGiftcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Config Value Handler -->
    <virtualType name="MultiSafepayFashionGiftcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayFashionGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayFashionGiftcardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayFashionGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayFashionGiftcardLogger</argument>
        </arguments>
    </type>

    <!-- FashionGiftcard Commands infrastructure -->
    <virtualType name="MultiSafepayFashionGiftcardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayFashionGiftcardInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Initialize command -->
    <virtualType name="MultiSafepayFashionGiftcardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayFashionGiftcardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Initialization Request -->
    <virtualType name="MultiSafepayFashionGiftcardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Validator Pool -->
    <virtualType name="MultiSafepayFashionGiftcardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayFashionGiftcardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayFashionGiftcardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayFashionGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- FashionGiftcard Value handlers infrastructure -->
    <virtualType name="MultiSafepayFashionGiftcardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayFashionGiftcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayFashionGiftcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayFashionGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Payment Method Facade configuration -->
    <virtualType name="MultiSafepayFietsenbonFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FietsenbonConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayFietsenbonValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayFietsenbonValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayFietsenbonCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Configuration reader -->
    <virtualType name="MultiSafepayFietsenbonConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FietsenbonConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Config Value Handler Pool -->
    <virtualType name="MultiSafepayFietsenbonConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayFietsenbonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Config Value Handler -->
    <virtualType name="MultiSafepayFietsenbonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayFietsenbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayFietsenbonLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayFietsenbonConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayFietsenbonLogger</argument>
        </arguments>
    </type>

    <!-- Fietsenbon Commands infrastructure -->
    <virtualType name="MultiSafepayFietsenbonCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayFietsenbonInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Initialize command -->
    <virtualType name="MultiSafepayFietsenbonInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayFietsenbonInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Initialization Request -->
    <virtualType name="MultiSafepayFietsenbonInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Validator Pool -->
    <virtualType name="MultiSafepayFietsenbonValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayFietsenbonCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayFietsenbonCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayFietsenbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Fietsenbon Value handlers infrastructure -->
    <virtualType name="MultiSafepayFietsenbonValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayFietsenbonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayFietsenbonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayFietsenbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Edenred Payment Method Facade configuration -->
    <virtualType name="MultiSafepayEdenredFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\EdenredGiftcardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayEdenredValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayEdenredValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayEdenredCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Edenred Configuration reader -->
    <virtualType name="MultiSafepayEdenredConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\EdenredGiftcardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Edenred Config Value Handler Pool -->
    <virtualType name="MultiSafepayEdenredConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayEdenredConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Edenred Config Value Handler -->
    <virtualType name="MultiSafepayEdenredConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayEdenredConfig</argument>
        </arguments>
    </virtualType>

    <!-- Edenred Logger, initialized with EdenredConfig -->
    <virtualType name="MultiSafepayEdenredLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayEdenredConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayEdenredLogger</argument>
        </arguments>
    </type>

    <!-- Edenred Commands infrastructure -->
    <virtualType name="MultiSafepayEdenredCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayEdenredInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayEdenredRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Edenred Initialize command -->
    <virtualType name="MultiSafepayEdenredInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayEdenredInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Edenred Refund command -->
    <virtualType name="MultiSafepayEdenredRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayEdenredRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Edenred Initialization Request -->
    <virtualType name="MultiSafepayEdenredInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Edenred Refund Request -->
    <virtualType name="MultiSafepayEdenredRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Edenred Validator Pool -->
    <virtualType name="MultiSafepayEdenredValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayEdenredCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayEdenredCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayEdenredConfig</argument>
        </arguments>
    </virtualType>

    <!-- Edenred Value handlers infrastructure -->
    <virtualType name="MultiSafepayEdenredValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayEdenredConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayEdenredConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayEdenredConfig</argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Payment Method Facade configuration -->
    <virtualType name="MultiSafepayGezondheidsbonFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GezondheidsbonConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayGezondheidsbonValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayGezondheidsbonValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayGezondheidsbonCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Configuration reader -->
    <virtualType name="MultiSafepayGezondheidsbonConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GezondheidsbonConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Config Value Handler Pool -->
    <virtualType name="MultiSafepayGezondheidsbonConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGezondheidsbonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Config Value Handler -->
    <virtualType name="MultiSafepayGezondheidsbonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGezondheidsbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayGezondheidsbonLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGezondheidsbonConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayGezondheidsbonLogger</argument>
        </arguments>
    </type>

    <!-- Gezondheidsbon Commands infrastructure -->
    <virtualType name="MultiSafepayGezondheidsbonCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayGezondheidsbonInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Initialize command -->
    <virtualType name="MultiSafepayGezondheidsbonInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGezondheidsbonInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Initialization Request -->
    <virtualType name="MultiSafepayGezondheidsbonInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Validator Pool -->
    <virtualType name="MultiSafepayGezondheidsbonValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayGezondheidsbonCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGezondheidsbonCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGezondheidsbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Gezondheidsbon Value handlers infrastructure -->
    <virtualType name="MultiSafepayGezondheidsbonValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGezondheidsbonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGezondheidsbonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGezondheidsbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Givacard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayGivacardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GivacardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayGivacardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayGivacardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayGivacardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Givacard Configuration reader -->
    <virtualType name="MultiSafepayGivacardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GivacardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Givacard Config Value Handler Pool -->
    <virtualType name="MultiSafepayGivacardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGivacardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Givacard Config Value Handler -->
    <virtualType name="MultiSafepayGivacardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGivacardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Givacard Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayGivacardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGivacardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayGivacardLogger</argument>
        </arguments>
    </type>

    <!-- Givacard Commands infrastructure -->
    <virtualType name="MultiSafepayGivacardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayGivacardInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Givacard Initialize command -->
    <virtualType name="MultiSafepayGivacardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGivacardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Givacard Initialization Request -->
    <virtualType name="MultiSafepayGivacardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Givacard Validator Pool -->
    <virtualType name="MultiSafepayGivacardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayGivacardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGivacardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGivacardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Givacard Value handlers infrastructure -->
    <virtualType name="MultiSafepayGivacardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGivacardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGivacardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGivacardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayGoodcardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GoodcardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayGoodcardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayGoodcardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayGoodcardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Configuration reader -->
    <virtualType name="MultiSafepayGoodcardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GoodcardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Config Value Handler Pool -->
    <virtualType name="MultiSafepayGoodcardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGoodcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Config Value Handler -->
    <virtualType name="MultiSafepayGoodcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGoodcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayGoodcardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGoodcardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayGoodcardLogger</argument>
        </arguments>
    </type>

    <!-- Goodcard Commands infrastructure -->
    <virtualType name="MultiSafepayGoodcardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayGoodcardInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Initialize command -->
    <virtualType name="MultiSafepayGoodcardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGoodcardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Initialization Request -->
    <virtualType name="MultiSafepayGoodcardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Validator Pool -->
    <virtualType name="MultiSafepayGoodcardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayGoodcardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGoodcardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGoodcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Goodcard Value handlers infrastructure -->
    <virtualType name="MultiSafepayGoodcardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGoodcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGoodcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGoodcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Payment Method Facade configuration -->
    <virtualType name="MultiSafepayNationaleTuinbonFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\NationaleTuinbonConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayNationaleTuinbonValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayNationaleTuinbonValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayNationaleTuinbonCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Configuration reader -->
    <virtualType name="MultiSafepayNationaleTuinbonConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\NationaleTuinbonConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Config Value Handler Pool -->
    <virtualType name="MultiSafepayNationaleTuinbonConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayNationaleTuinbonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Config Value Handler -->
    <virtualType name="MultiSafepayNationaleTuinbonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayNationaleTuinbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayNationaleTuinbonLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayNationaleTuinbonConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayNationaleTuinbonLogger</argument>
        </arguments>
    </type>

    <!-- NationaleTuinbon Commands infrastructure -->
    <virtualType name="MultiSafepayNationaleTuinbonCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayNationaleTuinbonInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Initialize command -->
    <virtualType name="MultiSafepayNationaleTuinbonInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayNationaleTuinbonInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Initialization Request -->
    <virtualType name="MultiSafepayNationaleTuinbonInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Validator Pool -->
    <virtualType name="MultiSafepayNationaleTuinbonValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayNationaleTuinbonCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayNationaleTuinbonCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayNationaleTuinbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- NationaleTuinbon Value handlers infrastructure -->
    <virtualType name="MultiSafepayNationaleTuinbonValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayNationaleTuinbonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayNationaleTuinbonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayNationaleTuinbonConfig</argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Payment Method Facade configuration -->
    <virtualType name="MultiSafepayParfumcadeaukaartFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\ParfumcadeaukaartConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayParfumcadeaukaartValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayParfumcadeaukaartValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayParfumcadeaukaartCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Configuration reader -->
    <virtualType name="MultiSafepayParfumcadeaukaartConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\ParfumcadeaukaartConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Config Value Handler Pool -->
    <virtualType name="MultiSafepayParfumcadeaukaartConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayParfumcadeaukaartConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Config Value Handler -->
    <virtualType name="MultiSafepayParfumcadeaukaartConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayParfumcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayParfumcadeaukaartLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayParfumcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayParfumcadeaukaartLogger</argument>
        </arguments>
    </type>

    <!-- Parfumcadeaukaart Commands infrastructure -->
    <virtualType name="MultiSafepayParfumcadeaukaartCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayParfumcadeaukaartInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Initialize command -->
    <virtualType name="MultiSafepayParfumcadeaukaartInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayParfumcadeaukaartInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Initialization Request -->
    <virtualType name="MultiSafepayParfumcadeaukaartInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Validator Pool -->
    <virtualType name="MultiSafepayParfumcadeaukaartValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayParfumcadeaukaartCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayParfumcadeaukaartCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayParfumcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- Parfumcadeaukaart Value handlers infrastructure -->
    <virtualType name="MultiSafepayParfumcadeaukaartValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayParfumcadeaukaartConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayParfumcadeaukaartConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayParfumcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Payment Method Facade configuration -->
    <virtualType name="MultiSafepayPodiumcadeaukaartFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\PodiumcadeaukaartConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayPodiumcadeaukaartValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayPodiumcadeaukaartValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayPodiumcadeaukaartCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Configuration reader -->
    <virtualType name="MultiSafepayPodiumcadeaukaartConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\PodiumcadeaukaartConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Config Value Handler Pool -->
    <virtualType name="MultiSafepayPodiumcadeaukaartConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayPodiumcadeaukaartConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Config Value Handler -->
    <virtualType name="MultiSafepayPodiumcadeaukaartConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayPodiumcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayPodiumcadeaukaartLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayPodiumcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayPodiumcadeaukaartLogger</argument>
        </arguments>
    </type>

    <!-- Podiumcadeaukaart Commands infrastructure -->
    <virtualType name="MultiSafepayPodiumcadeaukaartCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayPodiumcadeaukaartInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Initialize command -->
    <virtualType name="MultiSafepayPodiumcadeaukaartInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayPodiumcadeaukaartInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Initialization Request -->
    <virtualType name="MultiSafepayPodiumcadeaukaartInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Validator Pool -->
    <virtualType name="MultiSafepayPodiumcadeaukaartValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayPodiumcadeaukaartCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayPodiumcadeaukaartCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayPodiumcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- Podiumcadeaukaart Value handlers infrastructure -->
    <virtualType name="MultiSafepayPodiumcadeaukaartValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayPodiumcadeaukaartConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayPodiumcadeaukaartConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayPodiumcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Payment Method Facade configuration -->
    <virtualType name="MultiSafepaySportenfitFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\SportenfitConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepaySportenfitValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepaySportenfitValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepaySportenfitCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Configuration reader -->
    <virtualType name="MultiSafepaySportenfitConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\SportenfitConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Config Value Handler Pool -->
    <virtualType name="MultiSafepaySportenfitConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepaySportenfitConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Config Value Handler -->
    <virtualType name="MultiSafepaySportenfitConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepaySportenfitConfig</argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepaySportenfitLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepaySportenfitConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepaySportenfitLogger</argument>
        </arguments>
    </type>

    <!-- Sportenfit Commands infrastructure -->
    <virtualType name="MultiSafepaySportenfitCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepaySportenfitInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Initialize command -->
    <virtualType name="MultiSafepaySportenfitInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepaySportenfitInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Initialization Request -->
    <virtualType name="MultiSafepaySportenfitInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Validator Pool -->
    <virtualType name="MultiSafepaySportenfitValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepaySportenfitCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepaySportenfitCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepaySportenfitConfig</argument>
        </arguments>
    </virtualType>

    <!-- Sportenfit Value handlers infrastructure -->
    <virtualType name="MultiSafepaySportenfitValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepaySportenfitConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepaySportenfitConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepaySportenfitConfig</argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Payment Method Facade configuration -->
    <virtualType name="MultiSafepayVVVcadeaubonFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\VVVcadeaubonConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayVVVcadeaubonValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayVVVcadeaubonValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayVVVcadeaubonCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Configuration reader -->
    <virtualType name="MultiSafepayVVVcadeaubonConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\VVVcadeaubonConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Config Value Handler Pool -->
    <virtualType name="MultiSafepayVVVcadeaubonConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVVVcadeaubonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Config Value Handler -->
    <virtualType name="MultiSafepayVVVcadeaubonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVVVcadeaubonConfig</argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Logger, initialized with ApplePayConfig -->
    <virtualType name="MultiSafepayVVVcadeaubonLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVVVcadeaubonConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayVVVcadeaubonLogger</argument>
        </arguments>
    </type>

    <!-- VVV Cadeaubon Commands infrastructure -->
    <virtualType name="MultiSafepayVVVcadeaubonCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayVVVcadeaubonInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayVVVcadeaubonRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Initialize command -->
    <virtualType name="MultiSafepayVVVcadeaubonInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVVVcadeaubonInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Refund command -->
    <virtualType name="MultiSafepayVVVcadeaubonRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVVVcadeaubonRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Initialization Request -->
    <virtualType name="MultiSafepayVVVcadeaubonInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Refund Request -->
    <virtualType name="MultiSafepayVVVcadeaubonRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Validator Pool -->
    <virtualType name="MultiSafepayVVVcadeaubonValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayVVVcadeaubonCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayVVVcadeaubonCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVVVcadeaubonConfig</argument>
        </arguments>
    </virtualType>

    <!-- VVV Cadeaubon Value handlers infrastructure -->
    <virtualType name="MultiSafepayVVVcadeaubonValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVVVcadeaubonConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayVVVcadeaubonConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVVVcadeaubonConfig</argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Payment Method Facade configuration -->
    <virtualType name="MultiSafepayVVVcadeaukaartFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\VVVcadeaukaartConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayVVVcadeaukaartValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayVVVcadeaukaartValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayVVVcadeaukaartCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Configuration reader -->
    <virtualType name="MultiSafepayVVVcadeaukaartConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\VVVcadeaukaartConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Config Value Handler Pool -->
    <virtualType name="MultiSafepayVVVcadeaukaartConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVVVcadeaukaartConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Config Value Handler -->
    <virtualType name="MultiSafepayVVVcadeaukaartConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVVVcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayVVVcadeaukaartLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVVVcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayVVVcadeaukaartLogger</argument>
        </arguments>
    </type>

    <!-- VVVcadeaukaart Commands infrastructure -->
    <virtualType name="MultiSafepayVVVcadeaukaartCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayVVVcadeaukaartInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Initialize command -->
    <virtualType name="MultiSafepayVVVcadeaukaartInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayVVVcadeaukaartInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Initialization Request -->
    <virtualType name="MultiSafepayVVVcadeaukaartInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Validator Pool -->
    <virtualType name="MultiSafepayVVVcadeaukaartValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayVVVcadeaukaartCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayVVVcadeaukaartCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayVVVcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- VVVcadeaukaart Value handlers infrastructure -->
    <virtualType name="MultiSafepayVVVcadeaukaartValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayVVVcadeaukaartConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayVVVcadeaukaartConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayVVVcadeaukaartConfig</argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayWebshopGiftcardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WebshopGiftcardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayWebshopGiftcardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayWebshopGiftcardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayWebshopGiftcardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Configuration reader -->
    <virtualType name="MultiSafepayWebshopGiftcardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WebshopGiftcardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Config Value Handler Pool -->
    <virtualType name="MultiSafepayWebshopGiftcardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWebshopGiftcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Config Value Handler -->
    <virtualType name="MultiSafepayWebshopGiftcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWebshopGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayWebshopGiftcardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWebshopGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayWebshopGiftcardLogger</argument>
        </arguments>
    </type>

    <!-- WebshopGiftcard Commands infrastructure -->
    <virtualType name="MultiSafepayWebshopGiftcardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayWebshopGiftcardInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Initialize command -->
    <virtualType name="MultiSafepayWebshopGiftcardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayWebshopGiftcardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Initialization Request -->
    <virtualType name="MultiSafepayWebshopGiftcardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Validator Pool -->
    <virtualType name="MultiSafepayWebshopGiftcardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayWebshopGiftcardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWebshopGiftcardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWebshopGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- WebshopGiftcard Value handlers infrastructure -->
    <virtualType name="MultiSafepayWebshopGiftcardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWebshopGiftcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWebshopGiftcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWebshopGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Payment Method Facade configuration -->
    <virtualType name="MultiSafepayWeChatPayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\WeChatPayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayWeChatPayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayWeChatPayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayWeChatPayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Configuration reader -->
    <virtualType name="MultiSafepayWeChatPayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\WeChatPayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Config Value Handler Pool -->
    <virtualType name="MultiSafepayWeChatPayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWeChatPayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Config Value Handler -->
    <virtualType name="MultiSafepayWeChatPayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWeChatPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Logger, initialized with ApplePayConfig -->
    <virtualType name="MultiSafepayWeChatPayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWeChatPayConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayWeChatPayLogger</argument>
        </arguments>
    </type>

    <!-- WeChatPay Commands infrastructure -->
    <virtualType name="MultiSafepayWeChatPayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayWeChatPayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayWeChatPayRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Initialize command -->
    <virtualType name="MultiSafepayWeChatPayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayWeChatPayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Refund command -->
    <virtualType name="MultiSafepayWeChatPayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayWeChatPayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Initialization Request -->
    <virtualType name="MultiSafepayWeChatPayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Refund Request -->
    <virtualType name="MultiSafepayWeChatPayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Validator Pool -->
    <virtualType name="MultiSafepayWeChatPayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayWeChatPayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWeChatPayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWeChatPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- WeChatPay Value handlers infrastructure -->
    <virtualType name="MultiSafepayWeChatPayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWeChatPayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWeChatPayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWeChatPayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Mbway Payment Method Facade configuration -->
    <virtualType name="MultiSafepayMbwayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MbwayConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayMbwayValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayMbwayValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayMbwayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Mbway Configuration reader -->
    <virtualType name="MultiSafepayMbwayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MbwayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Mbway Config Value Handler Pool -->
    <virtualType name="MultiSafepayMbwayConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMbwayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mbway Config Value Handler -->
    <virtualType name="MultiSafepayMbwayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMbwayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Mbway Logger, initialized with ApplePayConfig -->
    <virtualType name="MultiSafepayMbwayLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMbwayConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayMbwayLogger</argument>
        </arguments>
    </type>

    <!-- Mbway Commands infrastructure -->
    <virtualType name="MultiSafepayMbwayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayMbwayInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayMbwayRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mbway Initialize command -->
    <virtualType name="MultiSafepayMbwayInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMbwayInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Mbway Refund command -->
    <virtualType name="MultiSafepayMbwayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMbwayRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Mbway Initialization Request -->
    <virtualType name="MultiSafepayMbwayInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mbway Refund Request -->
    <virtualType name="MultiSafepayMbwayRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Mbway Validator Pool -->
    <virtualType name="MultiSafepayMbwayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayMbwayCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMbwayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMbwayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Mbway Value handlers infrastructure -->
    <virtualType name="MultiSafepayMbwayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMbwayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMbwayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMbwayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Payment Method Facade configuration -->
    <virtualType name="MultiSafepayMultibancoFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MultibancoConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayMultibancoValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayMultibancoValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayMultibancoCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Configuration reader -->
    <virtualType name="MultiSafepayMultibancoConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Gateway\MultibancoConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Config Value Handler Pool -->
    <virtualType name="MultiSafepayMultibancoConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMultibancoConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Config Value Handler -->
    <virtualType name="MultiSafepayMultibancoConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMultibancoConfig</argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Logger, initialized with ApplePayConfig -->
    <virtualType name="MultiSafepayMultibancoLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMultibancoConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayMultibancoLogger</argument>
        </arguments>
    </type>

    <!-- Multibanco Commands infrastructure -->
    <virtualType name="MultiSafepayMultibancoCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayMultibancoInitializeCommand</item>
                <item name="refund" xsi:type="string">MultiSafepayMultibancoRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Initialize command -->
    <virtualType name="MultiSafepayMultibancoInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMultibancoInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Refund command -->
    <virtualType name="MultiSafepayMultibancoRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayMultibancoRefundRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RefundClient</argument>
            <argument name="handler" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Response\RefundResponseHandler</argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Initialization Request -->
    <virtualType name="MultiSafepayMultibancoInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Refund Request -->
    <virtualType name="MultiSafepayMultibancoRefundRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RefundTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Validator Pool -->
    <virtualType name="MultiSafepayMultibancoValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayMultibancoCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMultibancoCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayMultibancoConfig</argument>
        </arguments>
    </virtualType>

    <!-- Multibanco Value handlers infrastructure -->
    <virtualType name="MultiSafepayMultibancoValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayMultibancoConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayMultibancoConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayMultibancoConfig</argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Payment Method Facade configuration -->
    <virtualType name="MultiSafepayWellnessGiftcardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WellnessGiftcardConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayWellnessGiftcardValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayWellnessGiftcardValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayWellnessGiftcardCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Configuration reader -->
    <virtualType name="MultiSafepayWellnessGiftcardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WellnessGiftcardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Config Value Handler Pool -->
    <virtualType name="MultiSafepayWellnessGiftcardConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWellnessGiftcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Config Value Handler -->
    <virtualType name="MultiSafepayWellnessGiftcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWellnessGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayWellnessGiftcardLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWellnessGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayWellnessGiftcardLogger</argument>
        </arguments>
    </type>

    <!-- WellnessGiftcard Commands infrastructure -->
    <virtualType name="MultiSafepayWellnessGiftcardCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayWellnessGiftcardInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Initialize command -->
    <virtualType name="MultiSafepayWellnessGiftcardInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayWellnessGiftcardInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Initialization Request -->
    <virtualType name="MultiSafepayWellnessGiftcardInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Validator Pool -->
    <virtualType name="MultiSafepayWellnessGiftcardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayWellnessGiftcardCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWellnessGiftcardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWellnessGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- WellnessGiftcard Value handlers infrastructure -->
    <virtualType name="MultiSafepayWellnessGiftcardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWellnessGiftcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWellnessGiftcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWellnessGiftcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Payment Method Facade configuration -->
    <virtualType name="MultiSafepayWijnCadeauFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WijnCadeauConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayWijnCadeauValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayWijnCadeauValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayWijnCadeauCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Configuration reader -->
    <virtualType name="MultiSafepayWijnCadeauConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WijnCadeauConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Config Value Handler Pool -->
    <virtualType name="MultiSafepayWijnCadeauConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWijnCadeauConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Config Value Handler -->
    <virtualType name="MultiSafepayWijnCadeauConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWijnCadeauConfig</argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayWijnCadeauLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWijnCadeauConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayWijnCadeauLogger</argument>
        </arguments>
    </type>

    <!-- WijnCadeau Commands infrastructure -->
    <virtualType name="MultiSafepayWijnCadeauCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayWijnCadeauInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Initialize command -->
    <virtualType name="MultiSafepayWijnCadeauInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayWijnCadeauInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Initialization Request -->
    <virtualType name="MultiSafepayWijnCadeauInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Validator Pool -->
    <virtualType name="MultiSafepayWijnCadeauValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayWijnCadeauCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWijnCadeauCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWijnCadeauConfig</argument>
        </arguments>
    </virtualType>

    <!-- WijnCadeau Value handlers infrastructure -->
    <virtualType name="MultiSafepayWijnCadeauValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWijnCadeauConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWijnCadeauConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWijnCadeauConfig</argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Payment Method Facade configuration -->
    <virtualType name="MultiSafepayWinkelChequeFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WinkelChequeConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayWinkelChequeValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayWinkelChequeValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayWinkelChequeCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Configuration reader -->
    <virtualType name="MultiSafepayWinkelChequeConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WinkelChequeConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Config Value Handler Pool -->
    <virtualType name="MultiSafepayWinkelChequeConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWinkelChequeConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Config Value Handler -->
    <virtualType name="MultiSafepayWinkelChequeConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWinkelChequeConfig</argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayWinkelChequeLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWinkelChequeConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayWinkelChequeLogger</argument>
        </arguments>
    </type>

    <!-- WinkelCheque Commands infrastructure -->
    <virtualType name="MultiSafepayWinkelChequeCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayWinkelChequeInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Initialize command -->
    <virtualType name="MultiSafepayWinkelChequeInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayWinkelChequeInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Initialization Request -->
    <virtualType name="MultiSafepayWinkelChequeInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Validator Pool -->
    <virtualType name="MultiSafepayWinkelChequeValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayWinkelChequeCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWinkelChequeCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayWinkelChequeConfig</argument>
        </arguments>
    </virtualType>

    <!-- WinkelCheque Value handlers infrastructure -->
    <virtualType name="MultiSafepayWinkelChequeValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayWinkelChequeConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayWinkelChequeConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayWinkelChequeConfig</argument>
        </arguments>
    </virtualType>

    <!-- YourGift Payment Method Facade configuration -->
    <virtualType name="MultiSafepayYourGiftFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\YourGiftConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayYourGiftValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayYourGiftValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayYourGiftCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- YourGift Configuration reader -->
    <virtualType name="MultiSafepayYourGiftConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\YourGiftConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- YourGift Config Value Handler Pool -->
    <virtualType name="MultiSafepayYourGiftConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayYourGiftConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- YourGift Config Value Handler -->
    <virtualType name="MultiSafepayYourGiftConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayYourGiftConfig</argument>
        </arguments>
    </virtualType>

    <!-- YourGift Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayYourGiftLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayYourGiftConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayYourGiftLogger</argument>
        </arguments>
    </type>

    <!-- YourGift Commands infrastructure -->
    <virtualType name="MultiSafepayYourGiftCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayYourGiftInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- YourGift Initialize command -->
    <virtualType name="MultiSafepayYourGiftInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayYourGiftInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- YourGift Initialization Request -->
    <virtualType name="MultiSafepayYourGiftInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- YourGift Validator Pool -->
    <virtualType name="MultiSafepayYourGiftValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayYourGiftCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayYourGiftCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayYourGiftConfig</argument>
        </arguments>
    </virtualType>

    <!-- YourGift Value handlers infrastructure -->
    <virtualType name="MultiSafepayYourGiftValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayYourGiftConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayYourGiftConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayYourGiftConfig</argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Payment Method Facade configuration -->
    <virtualType name="MultiSafepayGood4funFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\Good4funConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\ConfigurableInfo</argument>
            <argument name="validatorPool" xsi:type="object">MultiSafepayGood4funValidatorPool</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultiSafepayGood4funValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MultiSafepayGood4funCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Configuration reader -->
    <virtualType name="MultiSafepayGood4funConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">MultiSafepay\ConnectCore\Model\Ui\Giftcard\Good4funConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Config Value Handler Pool -->
    <virtualType name="MultiSafepayGood4funConfigValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGood4funConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Config Value Handler -->
    <virtualType name="MultiSafepayGood4funConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGood4funConfig</argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Logger, initialized with AmexConfig -->
    <virtualType name="MultiSafepayGood4funLogger" type="Magento\Payment\Model\Method\Logger">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGood4funConfig</argument>
        </arguments>
    </virtualType>

    <type name="MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient">
        <arguments>
            <argument name="logger" xsi:type="object">MultiSafepayGood4funLogger</argument>
        </arguments>
    </type>

    <!-- Good4fun Commands infrastructure -->
    <virtualType name="MultiSafepayGood4funCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">MultiSafepayGood4funInitializeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Initialize command -->
    <virtualType name="MultiSafepayGood4funInitializeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MultiSafepayGood4funInitializeRequestBuilder</argument>
            <argument name="transferFactory" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Http\Client\RedirectClient</argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Initialization Request -->
    <virtualType name="MultiSafepayGood4funInitializeRequestBuilder" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">MultiSafepay\ConnectCore\Gateway\Request\Builder\RedirectTransactionBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Validator Pool -->
    <virtualType name="MultiSafepayGood4funValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">MultiSafepayGood4funCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGood4funCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">MultiSafepayGood4funConfig</argument>
        </arguments>
    </virtualType>

    <!-- Good4fun Value handlers infrastructure -->
    <virtualType name="MultiSafepayGood4funValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultiSafepayGood4funConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MultiSafepayGood4funConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MultiSafepayGood4funConfig</argument>
        </arguments>
    </virtualType>

    <!-- Custom MultiSafepay Logger -->
    <type name="MultiSafepay\ConnectCore\Logger\Handler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>
    <type name="MultiSafepay\ConnectCore\Logger\Logger">
        <arguments>
            <argument name="name" xsi:type="string">MultiSafepay</argument>
            <argument name="handlers"  xsi:type="array">
                <item name="default" xsi:type="object">MultiSafepay\ConnectCore\Logger\Handler</item>
            </argument>
        </arguments>
    </type>

    <type name="MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder">
        <arguments>
            <argument name="gatewayBuilders" xsi:type="array">
                <item name="multisafepay_ideal" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\IssuerGatewayInfoBuilder</item>
                <item name="multisafepay_mybank" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\IssuerGatewayInfoBuilder</item>
                <item name="multisafepay_payafter" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\BankAccountAndDateOfBirthGatewayInfoBuilder</item>
                <item name="multisafepay_afterpay" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\GenderAndDateOfBirthGatewayInfoBuilder</item>
                <item name="multisafepay_directbanktransfer" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\DirectBankTransferGatewayInfoBuilder</item>
                <item name="multisafepay_directdebit" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\DirectDebitGatewayInfoBuilder</item>
                <item name="multisafepay_einvoicing" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\ConfigurableGatewayInfoBuilder</item>
                <item name="multisafepay_in3" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\GenderGatewayInfoBuilder</item>
                <item name="multisafepay_applepay" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\WalletPaymentTokenGatewayInfoBuilder</item>
                <item name="multisafepay_googlepay" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder\WalletPaymentTokenGatewayInfoBuilder</item>
            </argument>
        </arguments>
    </type>

    <type name="MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder">
        <arguments>
            <argument name="additionalDataBuilders" xsi:type="array">
                <item name="multisafepay_visa" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_mastercard" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_maestro" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_creditcard" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_amex" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_bnplinstm" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_bnplmf" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_zinia" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_in3b2b" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_afterpay" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_einvoicing" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
                <item name="multisafepay_in3" xsi:type="array">
                    <item name="payment_component_builder" xsi:type="object">
                        MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder\PaymentComponentAdditionalDataBuilder
                    </item>
                </item>
            </argument>
        </arguments>
    </type>

    <type name="MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\ShoppingCartBuilder">
        <arguments>
            <argument name="shoppingCartBuilders" xsi:type="array">
                <item name="order_item_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\ShoppingCartBuilder\OrderItemBuilder</item>
                <item name="shipping_item_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\ShoppingCartBuilder\ShippingItemBuilder</item>
                <item name="custom_total_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\ShoppingCartBuilder\CustomTotalBuilder</item>
            </argument>
        </arguments>
    </type>

    <type name="MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilderPool">
        <arguments>
            <argument name="orderRequestBuilders" xsi:type="array">
                <item name="transaction_type_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\TransactionTypeBuilder</item>
                <item name="customer_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\CustomerBuilder</item>
                <item name="delivery_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\DeliveryBuilder</item>
                <item name="description_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\DescriptionBuilder</item>
                <item name="gateway_info_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\GatewayInfoBuilder</item>
                <item name="additional_data_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\AdditionalDataBuilder</item>
                <item name="payment_options_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\PaymentOptionsBuilder</item>
                <item name="plugin_data_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\PluginDataBuilder</item>
                <item name="recurring_model_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\RecurringModelBuilder</item>
                <item name="recurring_id_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\RecurringIdBuilder</item>
                <item name="second_chance_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\SecondChanceBuilder</item>
                <item name="seconds_active_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\SecondsActiveBuilder</item>
                <item name="shopping_cart_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\ShoppingCartBuilder</item>
                <item name="checkout_options_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\CheckoutOptionsBuilder</item>
                <item name="capture_builder" xsi:type="object">MultiSafepay\ConnectCore\Model\Api\Builder\OrderRequestBuilder\CaptureBuilder</item>
            </argument>
        </arguments>
    </type>

    <type name="MultiSafepay\ConnectCore\Gateway\Validator\Gateway\FieldValidator\GatewayFieldValidatorPool">
        <arguments>
            <argument name="gatewayFieldValidators" xsi:type="array">
                <item name="date_of_birth" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\FieldValidator\DateOfBirthFieldValidator</item>
                <item name="bank_account_number" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\FieldValidator\BankAccountNumberFieldValidator</item>
                <item name="gender" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\FieldValidator\GenderFieldValidator</item>
                <item name="empty_field" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\FieldValidator\EmptyFieldValidator</item>
                <item name="afterpay_terms" xsi:type="object">MultiSafepay\ConnectCore\Gateway\Validator\Gateway\FieldValidator\AfterpayTermsFieldValidator</item>
            </argument>
        </arguments>
    </type>

    <type name="MultiSafepay\ConnectCore\Model\Ui\ConfigProviderPool">
        <arguments>
            <argument name="configProviders" xsi:type="array">
                <item name="multisafepay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\MultiSafepayConfigProvider</item>
                <item name="multisafepay_ideal" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealConfigProvider</item>
                <item name="multisafepay_payafter" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\PayafterConfigProvider</item>
                <item name="multisafepay_bnplmf" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\BnplmfConfigProvider</item>
                <item name="multisafepay_bnplinstm" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\BnplinstmConfigProvider</item>
                <item name="multisafepay_klarna" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\KlarnaConfigProvider</item>
                <item name="multisafepay_afterpay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\AfterpayConfigProvider</item>
                <item name="multisafepay_bancontact" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\BancontactConfigProvider</item>
                <item name="multisafepay_amex" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmexConfigProvider</item>
                <item name="multisafepay_applepay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\ApplePayConfigProvider</item>
                <item name="multisafepay_belfius" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\BelfiusConfigProvider</item>
                <item name="multisafepay_creditcard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\CreditCardConfigProvider</item>
                <item name="multisafepay_dotpay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\DotpayConfigProvider</item>
                <item name="multisafepay_eps" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\EPSConfigProvider</item>
                <item name="multisafepay_giropay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\GiropayConfigProvider</item>
                <item name="multisafepay_googlepay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\GooglePayConfigProvider</item>
                <item name="multisafepay_idealqr" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealQRConfigProvider</item>
                <item name="multisafepay_maestro" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\MaestroConfigProvider</item>
                <item name="multisafepay_mastercard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\MastercardConfigProvider</item>
                <item name="multisafepay_mybank" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\MyBankConfigProvider</item>
                <item name="multisafepay_paysafecard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\PaysafecardConfigProvider</item>
                <item name="multisafepay_sofort" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\SofortConfigProvider</item>
                <item name="multisafepay_trustpay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\TrustPayConfigProvider</item>
                <item name="multisafepay_visa" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\VisaConfigProvider</item>
                <item name="multisafepay_alipay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\AlipayConfigProvider</item>
                <item name="multisafepay_alipayplus" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\AlipayplusConfigProvider</item>
                <item name="multisafepay_amazonpay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmazonPayConfigProvider</item>
                <item name="multisafepay_directbanktransfer" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectBankTransferConfigProvider</item>
                <item name="multisafepay_banktransfer" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\BankTransferConfigProvider</item>
                <item name="multisafepay_santander" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\SantanderConfigProvider</item>
                <item name="multisafepay_cbc" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\CBCConfigProvider</item>
                <item name="multisafepay_directdebit" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectDebitConfigProvider</item>
                <item name="multisafepay_einvoicing" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\EinvoicingConfigProvider</item>
                <item name="multisafepay_inghomepay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\INGHomePayConfigProvider</item>
                <item name="multisafepay_kbc" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\KBCConfigProvider</item>
                <item name="multisafepay_paypal" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\PaypalConfigProvider</item>
                <item name="multisafepay_trustly" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\TrustlyConfigProvider</item>
                <item name="multisafepay_in3" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\In3ConfigProvider</item>
                <item name="multisafepay_in3b2b" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\In3B2bConfigProvider</item>
                <item name="multisafepay_genericgateway" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\GenericGatewayConfigProvider</item>
                <item name="multisafepay_wechatpay" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\WeChatPayConfigProvider</item>
                <item name="multisafepay_zinia" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\ZiniaConfigProvider</item>
                <item name="multisafepay_mbway" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\MbwayConfigProvider</item>
                <item name="multisafepay_multibanco" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\MultibancoConfigProvider</item>

                <!-- Recurring -->
                <item name="multisafepay_creditcard_recurring" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\CreditCardRecurringConfigProvider</item>
                <item name="multisafepay_visa_recurring" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\VisaRecurringConfigProvider</item>
                <item name="multisafepay_mastercard_recurring" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\MastercardRecurringConfigProvider</item>
                <item name="multisafepay_amex_recurring" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\AmexRecurringConfigProvider</item>
                <item name="multisafepay_ideal_recurring" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\IdealRecurringConfigProvider</item>
                <item name="multisafepay_directdebit_recurring" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\DirectDebitRecurringConfigProvider</item>
                <item name="multisafepay_maestro_recurring" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Gateway\MaestroRecurringConfigProvider</item>
                <!-- Gift cards -->
                <item name="multisafepay_babygiftcard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BabyGiftcardConfigProvider</item>
                <item name="multisafepay_beautyandwellness" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BeautyAndWellnessConfigProvider</item>
                <item name="multisafepay_boekenbon" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\BoekenbonConfigProvider</item>
                <item name="multisafepay_edenred" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\EdenredGiftcardConfigProvider</item>
                <item name="multisafepay_fashioncheque" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FashionChequeConfigProvider</item>
                <item name="multisafepay_fashiongiftcard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FashionGiftcardConfigProvider</item>
                <item name="multisafepay_fietsenbon" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\FietsenbonConfigProvider</item>
                <item name="multisafepay_gezondheidsbon" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GezondheidsbonConfigProvider</item>
                <item name="multisafepay_givacard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GivacardConfigProvider</item>
                <item name="multisafepay_good4fun" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\Good4funConfigProvider</item>
                <item name="multisafepay_goodcard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\GoodcardConfigProvider</item>
                <item name="multisafepay_nationaletuinbon" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\NationaleTuinbonConfigProvider</item>
                <item name="multisafepay_parfumcadeaukaart" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\ParfumcadeaukaartConfigProvider</item>
                <item name="multisafepay_podiumcadeaukaart" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\PodiumcadeaukaartConfigProvider</item>
                <item name="multisafepay_sportenfit" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\SportenfitConfigProvider</item>
                <item name="multisafepay_vvvcadeaubon" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\VVVcadeaubonConfigProvider</item>
                <item name="multisafepay_vvvcadeaukaart" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\VVVcadeaukaartConfigProvider</item>
                <item name="multisafepay_webshopgiftcard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WebshopGiftcardConfigProvider</item>
                <item name="multisafepay_wellnessgiftcard" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WellnessGiftcardConfigProvider</item>
                <item name="multisafepay_wijncadeau" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WijnCadeauConfigProvider</item>
                <item name="multisafepay_winkelcheque" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\WinkelChequeConfigProvider</item>
                <item name="multisafepay_yourgift" xsi:type="object">MultiSafepay\ConnectCore\Model\Ui\Giftcard\YourGiftConfigProvider</item>
            </argument>
        </arguments>
    </type>

    <type name="Magento\Framework\App\Request\CsrfValidator">
        <plugin name="csrf_validator_skip" type="MultiSafepay\ConnectCore\Plugin\CsrfValidatorSkip" />
    </type>

    <type name="Magento\Sales\Api\Data\OrderInterface">
        <plugin name="multisafepay_cancel_order_pretransaction" type="MultiSafepay\ConnectCore\Plugin\Sales\Model\OrderPlugin" />
    </type>

    <type name="MultiSafepay\ConnectCore\Config\Config">
        <arguments>
            <argument name="scopeConfig" xsi:type="object">Magento\Framework\App\Config\ScopeConfigInterface</argument>
            <argument name="jsonHandler" xsi:type="object">MultiSafepay\ConnectCore\Util\JsonHandler\Proxy</argument>
        </arguments>
    </type>

    <preference for="MultiSafepay\ConnectCore\Api\PaymentUrlInterface" type="MultiSafepay\ConnectCore\Model\PaymentUrl"/>
    <preference for="MultiSafepay\ConnectCore\Api\GuestPaymentUrlInterface" type="MultiSafepay\ConnectCore\Model\GuestPaymentUrl"/>
    <preference for="MultiSafepay\ConnectCore\Api\MultisafepayOrderInterface" type="MultiSafepay\ConnectCore\Model\MultisafepayOrder"/>
    <preference for="MultiSafepay\ConnectCore\Api\PaymentMethodsInterface" type="MultiSafepay\ConnectCore\Model\PaymentMethods"/>
    <preference for="MultiSafepay\ConnectCore\Api\GuestPaymentMethodsInterface" type="MultiSafepay\ConnectCore\Model\GuestPaymentMethods"/>
    <preference for="MultiSafepay\ConnectCore\Api\RestoreQuoteInterface" type="MultiSafepay\ConnectCore\Model\RestoreQuote"/>
</config>
